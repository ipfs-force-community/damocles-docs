(window.webpackJsonp=window.webpackJsonp||[]).push([[48],{416:function(e,a,r){"use strict";r.r(a);var s=r(17),o=Object(s.a)({},(function(){var e=this,a=e.$createElement,r=e._self._c||a;return r("ContentSlotsDistributor",{attrs:{"slot-key":e.$parent.slotKey}},[r("h1",{attrs:{id:"damocles-worker-任务管理"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#damocles-worker-任务管理"}},[e._v("#")]),e._v(" damocles-worker 任务管理")]),e._v(" "),r("p",[e._v("之前的文档中，我们提到，在 damocles-cluster 体系中，将扇区的流程管理放到了 worker 中。")]),e._v(" "),r("p",[e._v("因此，扇区任务的管理，尤其是异常处理，也就要通过扇区所处的 worker 实例来执行。")]),e._v(" "),r("p",[e._v("但是如果全部的状态查看、异常处理都需要登录到对应机器去操作，那么肯定非常不方便。")]),e._v(" "),r("p",[e._v("因此在 v0.2.0 及之后的版本中，增加了 worker 向 sector-manager 上报状态，sector-manager 远程管理 worker 的机制。")]),e._v(" "),r("p",[e._v("下面，我们会就 worker 自管理和 sector-manager 管理 worker 的方式分别进行说明。")]),e._v(" "),r("h2",{attrs:{id:"damocles-worker-自管理"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#damocles-worker-自管理"}},[e._v("#")]),e._v(" damocles-worker 自管理")]),e._v(" "),r("p",[e._v("damocles-worker 的自管理主要通过")]),e._v(" "),r("div",{staticClass:"language- extra-class"},[r("pre",{pre:!0,attrs:{class:"language-text"}},[r("code",[e._v("./dist/bin/damocles-worker worker\n")])])]),r("p",[e._v("提供的一组工具，调用管理接口进行操作，其中包含的子命令是")]),e._v(" "),r("ul",[r("li",[e._v("list")]),e._v(" "),r("li",[e._v("pause")]),e._v(" "),r("li",[e._v("resume")])]),e._v(" "),r("h3",{attrs:{id:"list"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#list"}},[e._v("#")]),e._v(" list")]),e._v(" "),r("p",[r("code",[e._v("list")]),e._v(" 用于列出当前运行的 damocles-worker 实例中的所有 "),r("code",[e._v("sealing_thread")]),e._v(" 的当前状态。他的使用方式是")]),e._v(" "),r("div",{staticClass:"language- extra-class"},[r("pre",{pre:!0,attrs:{class:"language-text"}},[r("code",[e._v("damocles-worker worker list\n")])])]),r("p",[e._v("我们以代码库中的 mock 配置为例：")]),e._v(" "),r("div",{staticClass:"language- extra-class"},[r("pre",{pre:!0,attrs:{class:"language-text"}},[r("code",[e._v('$ ./dist/bin/damocles-worker worker list\n\n#0: "/home/dtynn/proj/github.com/ipfs-force-community/venus-cluster/mock-tmp/store1"; sector_id=Some(s-t010000-2), paused=true, paused_elapsed=Some(17s), state=C1Done, last_err=Some("permanent: No cached parameters found for stacked-proof-of-replication-merkletree-poseidon_hasher-8-0-0-sha256_hasher-032d3138d22506ec0082ed72b2dcba18df18477904e35bafee82b3793b06832f [failure finding /var/tmp/filecoin-proof-parameters/v28-stacked-proof-of-replication-merkletree-poseidon_hasher-8-0-0-sha256_hasher-032d3138d22506ec0082ed72b2dcba18df18477904e35bafee82b3793b06832f.params]")\n#1: "/home/dtynn/proj/github.com/ipfs-force-community/venus-cluster/mock-tmp/store2"; sector_id=Some(s-t010000-3), paused=true, paused_elapsed=Some(17s), state=C1Done, last_err=Some("permanent: No cached parameters found for stacked-proof-of-replication-merkletree-poseidon_hasher-8-0-0-sha256_hasher-032d3138d22506ec0082ed72b2dcba18df18477904e35bafee82b3793b06832f [failure finding /var/tmp/filecoin-proof-parameters/v28-stacked-proof-of-replication-merkletree-poseidon_hasher-8-0-0-sha256_hasher-032d3138d22506ec0082ed72b2dcba18df18477904e35bafee82b3793b06832f.params]")\n#2: "/home/dtynn/proj/github.com/ipfs-force-community/venus-cluster/mock-tmp/store3"; sector_id=Some(s-t010000-1), paused=true, paused_elapsed=Some(17s), state=C1Done, last_err=Some("permanent: No cached parameters found for stacked-proof-of-replication-merkletree-poseidon_hasher-8-0-0-sha256_hasher-032d3138d22506ec0082ed72b2dcba18df18477904e35bafee82b3793b06832f [failure finding /var/tmp/filecoin-proof-parameters/v28-stacked-proof-of-replication-merkletree-poseidon_hasher-8-0-0-sha256_hasher-032d3138d22506ec0082ed72b2dcba18df18477904e35bafee82b3793b06832f.params]")\n')])])]),r("p",[e._v("可以看到，针对每一个 "),r("code",[e._v("sealing_thread")]),e._v(" ，会列出")]),e._v(" "),r("ul",[r("li",[r("p",[e._v("序号")])]),e._v(" "),r("li",[r("p",[e._v("本地存储位置信息")])]),e._v(" "),r("li",[r("p",[e._v("扇区标识（如果有正在处理的扇区任务）")])]),e._v(" "),r("li",[r("p",[e._v("是否已暂停")])]),e._v(" "),r("li",[r("p",[e._v("已暂停的时间（如果有已暂停的扇区任务）")])]),e._v(" "),r("li",[r("p",[e._v("当前状态")])]),e._v(" "),r("li",[r("p",[e._v("最近一次异常信息（如果有因异常而暂停的扇区任务）")])])]),e._v(" "),r("h3",{attrs:{id:"pause"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#pause"}},[e._v("#")]),e._v(" pause")]),e._v(" "),r("p",[r("code",[e._v("pause")]),e._v(" 用于暂停指定序号的 "),r("code",[e._v("sealing_thread")]),e._v("。它的使用方式是")]),e._v(" "),r("div",{staticClass:"language- extra-class"},[r("pre",{pre:!0,attrs:{class:"language-text"}},[r("code",[e._v("$ damocles-worker worker pause --index <index>\n")])])]),r("p",[e._v("其中：")]),e._v(" "),r("ul",[r("li",[r("code",[e._v("index")]),e._v(" 需要和 "),r("code",[e._v("list")]),e._v(" 中的序号匹配。")])]),e._v(" "),r("h3",{attrs:{id:"resume"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#resume"}},[e._v("#")]),e._v(" resume")]),e._v(" "),r("p",[r("code",[e._v("resume")]),e._v(" 用于恢复处于暂停状态的 "),r("code",[e._v("sealing_thread")]),e._v("。它的使用方式是")]),e._v(" "),r("div",{staticClass:"language- extra-class"},[r("pre",{pre:!0,attrs:{class:"language-text"}},[r("code",[e._v("damocles-worker worker resume [--state <state>] --index <index>\n")])])]),r("p",[e._v("其中：")]),e._v(" "),r("ul",[r("li",[r("p",[r("code",[e._v("index")]),e._v(" 需要和 "),r("code",[e._v("list")]),e._v(" 中的序号匹配。")])]),e._v(" "),r("li",[r("p",[r("code",[e._v("state")]),e._v(" 是选填项。")]),e._v(" "),r("p",[e._v("不填写时，扇区会尝试以当前状态重启；如果填写了正确的 "),r("code",[e._v("state")]),e._v(" 值，将会以指定状态重启")]),e._v(" "),r("p",[e._v("对于不同的 "),r("code",[e._v("sealing_thread")]),e._v(" 任务类型，可选的状态值在 "),r("RouterLink",{attrs:{to:"/zh/operation/task-flow.html"}},[e._v("11.任务状态流转")])],1)])]),e._v(" "),r("h2",{attrs:{id:"damocles-manager-管理-damocles-worker"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#damocles-manager-管理-damocles-worker"}},[e._v("#")]),e._v(" damocles-manager 管理 damocles-worker")]),e._v(" "),r("p",[e._v("damocles-manager 对 damocles-worker 的管理主要是两方面：")]),e._v(" "),r("ol",[r("li",[e._v("接收 worker 实例的定时上报信息")]),e._v(" "),r("li",[e._v("调用指定 damocles-worker 实例上的管理接口")])]),e._v(" "),r("p",[e._v("使用者通过")]),e._v(" "),r("div",{staticClass:"language- extra-class"},[r("pre",{pre:!0,attrs:{class:"language-text"}},[r("code",[e._v("./dist/bin/damocles-manager util worker\n")])])]),r("p",[e._v("提供的一组工具，调用 damocles-manager 的管理接口，或代理调用指定 damocles-worker 的管理接口，完成操作。")]),e._v(" "),r("p",[e._v("包含的子命令是：")]),e._v(" "),r("ul",[r("li",[e._v("list")]),e._v(" "),r("li",[e._v("info")]),e._v(" "),r("li",[e._v("pause")]),e._v(" "),r("li",[e._v("resume")])]),e._v(" "),r("h3",{attrs:{id:"list-2"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#list-2"}},[e._v("#")]),e._v(" list")]),e._v(" "),r("p",[e._v("这里的 "),r("code",[e._v("list")]),e._v(" 用于列出所向本 damocles-manager 实例上报过信息的 worker 概况，例如：")]),e._v(" "),r("div",{staticClass:"language- extra-class"},[r("pre",{pre:!0,attrs:{class:"language-text"}},[r("code",[e._v("$ ./dist/bin/damocles-manager util worker list\nName       Dest             Threads  Empty  Paused  Errors  LastPing(with ! if expired)\n127.0.0.1  127.0.0.1:17890  3        0      3       3       2.756922465s\n")])])]),r("p",[e._v("可以看到，针对每一个实例，会列出：")]),e._v(" "),r("ul",[r("li",[e._v("实例名（如果没有指定实例名，则会以连接 damocles-manager 使用的 ip）")]),e._v(" "),r("li",[e._v("实例连接信息")]),e._v(" "),r("li",[r("code",[e._v("sealing_thread")]),e._v(" 数量")]),e._v(" "),r("li",[e._v("空载的 "),r("code",[e._v("sealing_thread")]),e._v(" 数量")]),e._v(" "),r("li",[e._v("暂停的 "),r("code",[e._v("sealing_thread")]),e._v(" 数量")]),e._v(" "),r("li",[e._v("报错的 "),r("code",[e._v("sealing_thread")]),e._v(" 数量")]),e._v(" "),r("li",[e._v("上一次上报距离当前时间的间隔")])]),e._v(" "),r("h3",{attrs:{id:"info-pause-resume"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#info-pause-resume"}},[e._v("#")]),e._v(" info / pause / resume")]),e._v(" "),r("p",[e._v("这一组命令都是针对指定的 damocles-worker 实例执行的。")]),e._v(" "),r("p",[e._v("他们的效果等效于 damocles-worker 自己的 "),r("code",[e._v("list")]),e._v(" / "),r("code",[e._v("pause")]),e._v(" / "),r("code",[e._v("resume")]),e._v("，使用方式分别为")]),e._v(" "),r("ul",[r("li",[r("code",[e._v("damocles-manager util worker info <worker instance name or address>")])]),e._v(" "),r("li",[r("code",[e._v("damocles-manager util worker pause <worker instance name or address> <thread index>")])]),e._v(" "),r("li",[r("code",[e._v("damocles-manager util worker resume <worker instance name or address> <thread index> [<next state>]")])])]),e._v(" "),r("p",[e._v("具体信息可以通过 "),r("code",[e._v("help")]),e._v(" 来查看，而参数的定义和效果则和 damocles-worker 管理工具保持一致。")]),e._v(" "),r("p",[e._v("举例来说：")]),e._v(" "),r("div",{staticClass:"language- extra-class"},[r("pre",{pre:!0,attrs:{class:"language-text"}},[r("code",[e._v("$ ./dist/bin/damocles-manager util worker info 127.0.0.1\n\nIndex  Loc                                                                             SectorID     Paused  PausedElapsed  State   LastErr\n0      /home/dtynn/proj/github.com/ipfs-force-community/venus-cluster/mock-tmp/store1  s-t010000-2  true    13m42s         C1Done  permanent: No cached parameters found for stacked-proof-of-replication-merkletree-poseidon_hasher-8-0-0-sha256_hasher-032d3138d22506ec0082ed72b2dcba18df18477904e35bafee82b3793b06832f [failure finding /var/tmp/filecoin-proof-parameters/v28-stacked-proof-of-replication-merkletree-poseidon_hasher-8-0-0-sha256_hasher-032d3138d22506ec0082ed72b2dcba18df18477904e35bafee82b3793b06832f.params]\n1      /home/dtynn/proj/github.com/ipfs-force-community/venus-cluster/mock-tmp/store2  s-t010000-3  true    13m42s         C1Done  permanent: No cached parameters found for stacked-proof-of-replication-merkletree-poseidon_hasher-8-0-0-sha256_hasher-032d3138d22506ec0082ed72b2dcba18df18477904e35bafee82b3793b06832f [failure finding /var/tmp/filecoin-proof-parameters/v28-stacked-proof-of-replication-merkletree-poseidon_hasher-8-0-0-sha256_hasher-032d3138d22506ec0082ed72b2dcba18df18477904e35bafee82b3793b06832f.params]\n2      /home/dtynn/proj/github.com/ipfs-force-community/venus-cluster/mock-tmp/store3  s-t010000-1  true    13m42s         C1Done  permanent: No cached parameters found for stacked-proof-of-replication-merkletree-poseidon_hasher-8-0-0-sha256_hasher-032d3138d22506ec0082ed72b2dcba18df18477904e35bafee82b3793b06832f [failure finding /var/tmp/filecoin-proof-parameters/v28-stacked-proof-of-replication-merkletree-poseidon_hasher-8-0-0-sha256_hasher-032d3138d22506ec0082ed72b2dcba18df18477904e35bafee82b3793b06832f.params]\n")])])])])}),[],!1,null,null,null);a.default=o.exports}}]);
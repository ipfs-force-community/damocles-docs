(window.webpackJsonp=window.webpackJsonp||[]).push([[38],{423:function(r,t,e){"use strict";e.r(t);var a=e(17),s=Object(a.a)({},(function(){var r=this,t=r.$createElement,e=r._self._c||t;return e("ContentSlotsDistributor",{attrs:{"slot-key":r.$parent.slotKey}},[e("h1",{attrs:{id:"damocles-manager-的-metrics-使用"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#damocles-manager-的-metrics-使用"}},[r._v("#")]),r._v(" damocles-manager 的 metrics 使用")]),r._v(" "),e("p",[r._v("damocles 使用 metrics 来记录程序运行过程中的性能指标，本篇主要讲 damocles-manager 中 metrics 的意义，关于如何使用 metrics 进行进程的监控，\n可以找到很多资料，不在此进行赘述。")]),r._v(" "),e("h2",{attrs:{id:"exporter-info"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#exporter-info"}},[r._v("#")]),r._v(" exporter info")]),r._v(" "),e("p",[r._v("damocles-manager 的 exporter 和 rpc 使用同样的端口，url 为"),e("code",[r._v("/metrics")]),r._v(", 因此对于默认的部署方式，exporter 的 url 为\n"),e("code",[r._v("host:1789/metrics")])]),r._v(" "),e("h2",{attrs:{id:"metrics-type"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#metrics-type"}},[r._v("#")]),r._v(" metrics type")]),r._v(" "),e("h4",{attrs:{id:"venusclusterinfo"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#venusclusterinfo"}},[r._v("#")]),r._v(" VenusClusterInfo")]),r._v(" "),e("p",[r._v("damocles-manager 启动的时候会将这个标记置成 1。")]),r._v(" "),e("h4",{attrs:{id:"sectormanagernewsector"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#sectormanagernewsector"}},[r._v("#")]),r._v(" SectorManagerNewSector")]),r._v(" "),e("p",[r._v("sector manager 记录新建扇区的计数器，存在 miner 的 tag，根据不同的 miner 分开统计。")]),r._v(" "),e("h4",{attrs:{id:"sectormanagerprecommitsector"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#sectormanagerprecommitsector"}},[r._v("#")]),r._v(" SectorManagerPreCommitSector")]),r._v(" "),e("p",[r._v("sector manager 记录扇区 preCommit 次数的计数器，存在 miner 的 tag，根据不同的 miner 分开统计。")]),r._v(" "),e("h4",{attrs:{id:"sectormanagercommitsector"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#sectormanagercommitsector"}},[r._v("#")]),r._v(" SectorManagerCommitSector")]),r._v(" "),e("p",[r._v("sector manager 记录扇区 commit 次数的计数器，存在 miner 的 tag，根据不同的 miner 分开统计。")]),r._v(" "),e("h4",{attrs:{id:"proverwinningpostduration"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#proverwinningpostduration"}},[r._v("#")]),r._v(" ProverWinningPostDuration")]),r._v(" "),e("p",[r._v("prover 侧记录 winningPost 时间跨度的计数器，存在 miner 的 tag，根据不同的 miner 分开统计，并且计算时间会按 s 作单位，进行分段统计。"),e("strong",[r._v("目前还没有启用")]),r._v("。")]),r._v(" "),e("h4",{attrs:{id:"proverwindowpostduration"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#proverwindowpostduration"}},[r._v("#")]),r._v(" ProverWindowPostDuration")]),r._v(" "),e("p",[r._v("prover 侧记录 windowPost 时间跨度的计数器，存在 miner 的 tag，根据不同的 miner 分开统计，并且计算时间会按 minute 作单位，进行分段统计。"),e("strong",[r._v("目前还没有启用")]),r._v("。")]),r._v(" "),e("h4",{attrs:{id:"proverwindowpostcompleterate"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#proverwindowpostcompleterate"}},[r._v("#")]),r._v(" ProverWindowPostCompleteRate")]),r._v(" "),e("p",[r._v("prover 侧记录 windowPost 完成率的计数器，在 miner 进入当前 deadline 倒数 20 个 epoch 的时候会开始显示 partition 的完成率，在没有进入倒计时状态的时候都显示 1，\n进入之后显示完成率的小数，比如 10 个 partition 里有 9 个完成提交了，那么显示为 0.9。存在 miner 的 tag，根据不同的 miner 分开统计。"),e("strong",[r._v("目前还没有启用")]),r._v("。")]),r._v(" "),e("h4",{attrs:{id:"apirequestduration"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#apirequestduration"}},[r._v("#")]),r._v(" APIRequestDuration")]),r._v(" "),e("p",[r._v("damocles-manager 的 API 都会记录其响应的时间，并且响应时间会按 ms 作单位，进行分段统计。")])])}),[],!1,null,null,null);t.default=s.exports}}]);
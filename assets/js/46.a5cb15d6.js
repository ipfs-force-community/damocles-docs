(window.webpackJsonp=window.webpackJsonp||[]).push([[46],{413:function(e,a,s){"use strict";s.r(a);var t=s(17),n=Object(t.a)({},(function(){var e=this,a=e.$createElement,s=e._self._c||a;return s("ContentSlotsDistributor",{attrs:{"slot-key":e.$parent.slotKey}},[s("h2",{attrs:{id:"unseal-任务的支持"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#unseal-任务的支持"}},[e._v("#")]),e._v(" Unseal 任务的支持")]),e._v(" "),s("h3",{attrs:{id:"概述"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#概述"}},[e._v("#")]),e._v(" 概述")]),e._v(" "),s("p",[e._v("订单检索是 Filecoin 生态闭环中的一个重要环节, 当前 "),s("code",[e._v("Droplet")]),e._v(" 会默认使用其 "),s("code",[e._v("PieceStore")]),e._v(" 中的 "),s("code",[e._v("Piece 数据")]),e._v("响应检索订单的数据请求。同时用户也可以通过配置来控制 "),s("code",[e._v("Droplet")]),e._v(" 缓存的 Piece 数据， 当 Droplet 发现数据库中 没有该目标 Piece 的数据时， 就会触发 "),s("code",[e._v("unseal 任务")]),e._v("， 并向 "),s("code",[e._v("Damocles")]),e._v(" 下发该任务。\n"),s("code",[e._v("Damocles Manager")]),e._v(" （下称："),s("code",[e._v("Manager")]),e._v(" ） 在接收到该任务之后，会将其分配给支持 "),s("code",[e._v("unseal plan")]),e._v("  的 "),s("code",[e._v("Damocles Worker")]),e._v(" （下称："),s("code",[e._v("Worker")]),e._v("）。待  "),s("code",[e._v("Worker")]),e._v(" 完成该任务之后， 就会将 unseal 之后的文件上传到 "),s("code",[e._v("unseal 任务")]),e._v("中指定的位置（该位置，默认是 "),s("code",[e._v("Droplet")]),e._v(" 的 PieceStore） 。")]),e._v(" "),s("h3",{attrs:{id:"原理"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#原理"}},[e._v("#")]),e._v(" 原理")]),e._v(" "),s("p",[e._v("订单在在封装完成之后会将 "),s("code",[e._v("sealed file")]),e._v(" 留存在"),s("code",[e._v("永久存储目录")]),e._v("，用以应对时空证明和 "),s("code",[e._v("unseal 任务")]),e._v("。\n"),s("code",[e._v("Woker")]),e._v(" 在接收到 "),s("code",[e._v("unseal 任务")]),e._v("之后，会从  "),s("code",[e._v("Manager")]),e._v(" 获取目标 Piece 数据 所在扇区的"),s("code",[e._v("sealed file")]),e._v("  和 "),s("code",[e._v("元数据")]),e._v("，然后执行 PC1 的逆向算法，还原 Piece 数据。")]),e._v(" "),s("h3",{attrs:{id:"启用"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#启用"}},[e._v("#")]),e._v(" 启用")]),e._v(" "),s("p",[s("code",[e._v("Damocles")]),e._v(" 支持 "),s("code",[e._v("unseal 任务")]),e._v(" 只需要  "),s("code",[e._v("Worker")]),e._v(" 启用一个支持 "),s("code",[e._v("unseal plan")]),e._v(" 的"),s("code",[e._v("封装进程")]),e._v("即可。\n启用 "),s("code",[e._v("unseal plan")]),e._v("的"),s("code",[e._v("封装进程")]),e._v("可以有两种方式：")]),e._v(" "),s("ol",[s("li",[e._v("直接修改 "),s("code",[e._v("Woker")]),e._v(" 的主配置文件，新增一个 封装进程，或者直接修改 现有封装进程的 "),s("code",[e._v("plan")]),e._v(" 等待适当的时机重启。")])]),e._v(" "),s("div",{staticClass:"language-TOML extra-class"},[s("pre",{pre:!0,attrs:{class:"language-toml"}},[s("code",[s("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("[")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("[")]),s("span",{pre:!0,attrs:{class:"token table class-name"}},[e._v("sealing_thread")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("]")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("]")]),e._v("\n"),s("span",{pre:!0,attrs:{class:"token key property"}},[e._v("location")]),e._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("=")]),e._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[e._v('"./mock-tmp/store1"')]),e._v("\n"),s("span",{pre:!0,attrs:{class:"token key property"}},[e._v("plan")]),e._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("=")]),e._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[e._v('"unseal"')]),e._v("\n")])])]),s("ol",[s("li",[e._v("使用"),s("code",[e._v("配置热更新")]),e._v("的方式，添加或修改封装进程。 详细参见 配置热更新章节")])]),e._v(" "),s("h3",{attrs:{id:"手动触发-unseal-任务"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#手动触发-unseal-任务"}},[e._v("#")]),e._v(" 手动触发 unseal 任务")]),e._v(" "),s("p",[e._v("在 Piece 数据 意识或者某一些别的特殊情形下， 我们可能会希望能够手动触发 "),s("code",[e._v("unseal 任务")]),e._v("， 获取 Piece 数据。\n这时我们就可以通过  "),s("code",[e._v("Manager")]),e._v(" 提供的命令行工具来手动生成并触发 "),s("code",[e._v("unseal 任务")])]),e._v(" "),s("div",{staticClass:"language-sh extra-class"},[s("pre",{pre:!0,attrs:{class:"language-sh"}},[s("code",[e._v("damocles-manager util sealer sectors unseal\nNAME:\n   damocles-manager util sealer sectors unseal - unseal specified sector\n\nUSAGE:\n   damocles-manager util sealer sectors unseal "),s("span",{pre:!0,attrs:{class:"token builtin class-name"}},[e._v("command")]),e._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("[")]),e._v("command options"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("]")]),e._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[e._v("<")]),e._v("piece_cid"),s("span",{pre:!0,attrs:{class:"token operator"}},[e._v(">")]),e._v("\n\nCOMMANDS:\n   help, h  Shows a list of commands or "),s("span",{pre:!0,attrs:{class:"token builtin class-name"}},[e._v("help")]),e._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[e._v("for")]),e._v(" one "),s("span",{pre:!0,attrs:{class:"token builtin class-name"}},[e._v("command")]),e._v("\n\nOPTIONS:\n   --output value, -o value                        output piece as a car "),s("span",{pre:!0,attrs:{class:"token function"}},[e._v("file")]),e._v(" to the specific path\n   --actor value, --miner value, --actor-id value  specify actor "),s("span",{pre:!0,attrs:{class:"token function"}},[e._v("id")]),e._v(" of miner manully, it must worke with flag "),s("span",{pre:!0,attrs:{class:"token string"}},[e._v('"--sector"')]),e._v("  "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("(")]),e._v("default: "),s("span",{pre:!0,attrs:{class:"token number"}},[e._v("0")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(")")]),e._v("\n   --sector value, --sector-id value               specify sector number manully, it must worke with flag "),s("span",{pre:!0,attrs:{class:"token string"}},[e._v('"--actor"')]),e._v("  "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("(")]),e._v("default: "),s("span",{pre:!0,attrs:{class:"token number"}},[e._v("0")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(")")]),e._v("\n   --piece-info-from-droplet, --from-droplet       get piece info from droplet, "),s("span",{pre:!0,attrs:{class:"token function"}},[e._v("which")]),e._v(" come from damocles db by default "),s("span",{pre:!0,attrs:{class:"token builtin class-name"}},[e._v(".")]),e._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("(")]),e._v("default: "),s("span",{pre:!0,attrs:{class:"token boolean"}},[e._v("false")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(")")]),e._v("\n   --unseal-file value                             unseal piece from unseal "),s("span",{pre:!0,attrs:{class:"token function"}},[e._v("file")]),e._v("\n   --offset value                                  specify offset of piece manually "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("(")]),e._v("default: "),s("span",{pre:!0,attrs:{class:"token number"}},[e._v("0")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(")")]),e._v("\n   --size value                                    specify size of piece manually "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("(")]),e._v("default: "),s("span",{pre:!0,attrs:{class:"token number"}},[e._v("0")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(")")]),e._v("\n   --dest value                                    specify destination to transfer piece manually, there are five protocols can be used:"),s("span",{pre:!0,attrs:{class:"token string"}},[e._v('"file:///path"')]),e._v(","),s("span",{pre:!0,attrs:{class:"token string"}},[e._v('"http://"')]),e._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[e._v('"https://"')]),e._v(", "),s("span",{pre:!0,attrs:{class:"token string"}},[e._v('"market://store_name/piece_cid"')]),e._v(", "),s("span",{pre:!0,attrs:{class:"token string"}},[e._v('"store://store_name/piece_cid"')]),e._v("\n   --help, -h                                      show "),s("span",{pre:!0,attrs:{class:"token builtin class-name"}},[e._v("help")]),e._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("(")]),e._v("default: "),s("span",{pre:!0,attrs:{class:"token boolean"}},[e._v("false")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(")")]),e._v("\n\n")])])]),s("h4",{attrs:{id:"unseal-piece-简单使用"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#unseal-piece-简单使用"}},[e._v("#")]),e._v(" unseal piece 简单使用")]),e._v(" "),s("p",[e._v("用户可以直接通过 piece 数据的 cid (piececid) 来发布一个 "),s("code",[e._v("unseal 任务")]),e._v(":")]),e._v(" "),s("div",{staticClass:"language-sh extra-class"},[s("pre",{pre:!0,attrs:{class:"language-sh"}},[s("code",[e._v("damocles-manager util sealer sectors unseal "),s("span",{pre:!0,attrs:{class:"token operator"}},[e._v("<")]),e._v("piece_cid"),s("span",{pre:!0,attrs:{class:"token operator"}},[e._v(">")]),e._v("\n")])])]),s("p",[e._v("此时  "),s("code",[e._v("Manager")]),e._v(" 会生成一个 "),s("code",[e._v("unseal 任务")]),e._v("。\n此时  "),s("code",[e._v("Manager")]),e._v(" 中能看到 unseal 任务相关的日志， 形如：")]),e._v(" "),s("div",{staticClass:"language-sh extra-class"},[s("pre",{pre:!0,attrs:{class:"language-sh"}},[s("code",[s("span",{pre:!0,attrs:{class:"token function"}},[e._v("add")]),e._v(" new dest to unseal task\n")])])]),s("p",[e._v("此时,程序会持续运行，直到 unseal 任务完成，会在当前目录生成一个 名字为 piece cid 的文件。")]),e._v(" "),s("h4",{attrs:{id:"flag-解释"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#flag-解释"}},[e._v("#")]),e._v(" flag 解释")]),e._v(" "),s("h5",{attrs:{id:"指定不同方式获取-piece-info"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#指定不同方式获取-piece-info"}},[e._v("#")]),e._v(" 指定不同方式获取 piece info")]),e._v(" "),s("p",[e._v("还原 piece 数据需要获取 piece 数据在扇区中的位置和大小，"),s("code",[e._v("unseal 任务")]),e._v(" 默认会从 "),s("code",[e._v("Manager")]),e._v(" 数据库中获取 piece 数据的 "),s("code",[e._v("offset")]),e._v(" 和 "),s("code",[e._v("size")]),e._v(" 信息，但是有时候，数据库中的数据丢失或者不完整的时候，我们可能希望可以从别的地方获取这些参数或者可以手动指定这两个参数，这时候就可以用到以下三个 flag ：")]),e._v(" "),s("div",{staticClass:"language-sh extra-class"},[s("pre",{pre:!0,attrs:{class:"language-sh"}},[s("code",[e._v("   --from-droplet             get piece info from venus-market, "),s("span",{pre:!0,attrs:{class:"token function"}},[e._v("which")]),e._v(" come from damocles db by default "),s("span",{pre:!0,attrs:{class:"token builtin class-name"}},[e._v(".")]),e._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("(")]),e._v("default: "),s("span",{pre:!0,attrs:{class:"token boolean"}},[e._v("false")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(")")]),e._v("\n   --offset value            specify offset of piece manually "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("(")]),e._v("default: "),s("span",{pre:!0,attrs:{class:"token number"}},[e._v("0")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(")")]),e._v("\n   --size value              specify size of piece manually "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("(")]),e._v("default: "),s("span",{pre:!0,attrs:{class:"token number"}},[e._v("0")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(")")]),e._v("\n")])])]),s("ul",[s("li",[e._v("from-droplet 从 "),s("code",[e._v("Droplet")]),e._v(" 获取 "),s("code",[e._v("offset")]),e._v(" 和 "),s("code",[e._v("size")]),e._v("，前提是 "),s("code",[e._v("Manager")]),e._v(" 已经连接了 "),s("code",[e._v("Droplet")]),e._v("。")]),e._v(" "),s("li",[e._v("offset： piece 数据在 扇区中的 位置")]),e._v(" "),s("li",[e._v("size：Piece 数据的大小")])]),e._v(" "),s("p",[e._v("如果你才升级到 v0.7.0 之后的版本没多久，可能会存在数据库中数据不完整的情况（v0.7.0之前，数据库不会记录 "),s("code",[e._v("offset")]),e._v(" ）。")]),e._v(" "),s("h5",{attrs:{id:"指定-piece-数据输出的位置"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#指定-piece-数据输出的位置"}},[e._v("#")]),e._v(" 指定 piece 数据输出的位置")]),e._v(" "),s("p",[e._v("有时候我们可能希望指定 piece 数据输出的位置， 可以使用  "),s("code",[e._v("-o")]),e._v(" flag 指定输出位置")]),e._v(" "),s("div",{staticClass:"language-sh extra-class"},[s("pre",{pre:!0,attrs:{class:"language-sh"}},[s("code",[e._v("   --output value, -o value  output piece as a car "),s("span",{pre:!0,attrs:{class:"token function"}},[e._v("file")]),e._v(" to the specific path\n")])])]),s("h5",{attrs:{id:"直接从-unseal-文件还原-piece-数据"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#直接从-unseal-文件还原-piece-数据"}},[e._v("#")]),e._v(" 直接从 unseal 文件还原 piece 数据")]),e._v(" "),s("p",[s("code",[e._v("Damocles")]),e._v(" 默认从 "),s("code",[e._v("sealed 文件")]),e._v(" 还原 piece 数据, 但是如果用户留存了 "),s("code",[e._v("unseal 文件")]),e._v(", 可以直接从 "),s("code",[e._v("unseal 文件")]),e._v(" 还原 piece 数据，这会节省大量的时间和资源，这时候可以使用 "),s("code",[e._v("--unseal-file")]),e._v(" flag 指定 piece 对应的 "),s("code",[e._v("unseal 文件")]),e._v(" 的路径。")]),e._v(" "),s("div",{staticClass:"language-sh extra-class"},[s("pre",{pre:!0,attrs:{class:"language-sh"}},[s("code",[e._v("   --unseal-file value  unseal piece from unseal "),s("span",{pre:!0,attrs:{class:"token function"}},[e._v("file")]),e._v("\n")])])]),s("h5",{attrs:{id:"通过-dest-协议将文件上传值目标位置"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#通过-dest-协议将文件上传值目标位置"}},[e._v("#")]),e._v(" 通过 dest 协议将文件上传值目标位置")]),e._v(" "),s("p",[e._v("默认情况下，以及加了"),s("code",[e._v("-o")]),e._v("flag 的情况下，"),s("code",[e._v("Worker")]),e._v("  unseal 得到的 piece 数据会上传到  "),s("code",[e._v("Manager")]),e._v(" ，由  "),s("code",[e._v("Manager")]),e._v(" 将其输出到  "),s("code",[e._v("Manager")]),e._v(" 所在机器的指定路径上。\n但有时候， 我们并不希望 "),s("code",[e._v("Worker上传")]),e._v(" piece 数据到 "),s("code",[e._v("Manager")]),e._v(" ，而是直接上传到别的目标位置，这个时候就需要用到  "),s("code",[e._v("--dest")]),e._v("flag。")]),e._v(" "),s("p",[e._v("dest 协议支持通过以下四种方式指定上传 piece 数据的目标位置：")]),e._v(" "),s("ul",[s("li",[e._v("将文件直接输出到 "),s("code",[e._v("Worker")]),e._v(" 本地\n"),s("ul",[s("li",[e._v('"file:///path"')]),e._v(" "),s("li",[e._v("注意，上述 url 中 host 的位置必须为空。")])])]),e._v(" "),s("li",[e._v("网络位置\n"),s("ul",[s("li",[e._v('"http://" "https://"')])])]),e._v(" "),s("li",[e._v("上传至 "),s("code",[e._v("Droplet")]),e._v(" 的 "),s("code",[e._v("piece store")]),e._v(" "),s("ul",[s("li",[e._v('"market://store_name/piece_cid"')]),e._v(" "),s("li",[e._v("其中 "),s("code",[e._v("store_name")]),e._v(" 指的是 market 中 piece store 的名字")])])]),e._v(" "),s("li",[e._v("上传至  "),s("code",[e._v("Manager")]),e._v(" 的"),s("code",[e._v("piece store")]),e._v(" "),s("ul",[s("li",[e._v('"store://store_name/piece_cid"')]),e._v(" "),s("li",[e._v("其中 "),s("code",[e._v("store_name")]),e._v(" 指的是 "),s("code",[e._v("Manager")]),e._v(" 中 "),s("code",[e._v("piece store")]),e._v(" 的名字")]),e._v(" "),s("li",[e._v("注意： 应确保  "),s("code",[e._v("Manager")]),e._v(" 的 "),s("code",[e._v("piece store")]),e._v("已经挂载并配置到 "),s("code",[e._v("Worker")]),e._v(" 中")])])])]),e._v(" "),s("p",[e._v("因为从 "),s("code",[e._v("unseal 文件")]),e._v(" 还原 piece 数据是不需要经过 "),s("code",[e._v("Worker")]),e._v(" 的，所以这个时候指定 "),s("code",[e._v("--dest")]),e._v(" flag 是无效的")])])}),[],!1,null,null,null);a.default=n.exports}}]);
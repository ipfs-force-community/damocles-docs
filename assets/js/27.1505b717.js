(window.webpackJsonp=window.webpackJsonp||[]).push([[27],{394:function(e,v,_){"use strict";_.r(v);var o=_(17),r=Object(o.a)({},(function(){var e=this,v=e.$createElement,_=e._self._c||v;return _("ContentSlotsDistributor",{attrs:{"slot-key":e.$parent.slotKey}},[_("h1",{attrs:{id:"概念和基础设施"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#概念和基础设施"}},[e._v("#")]),e._v(" 概念和基础设施")]),e._v(" "),_("p",[_("code",[e._v("damocles")]),e._v(" 包含了一系列的抽象、功能组件、基础设施。了解这些内容有助于我们理解 "),_("code",[e._v("damocles")]),e._v(" 的运转。")]),e._v(" "),_("h2",{attrs:{id:"公共部分"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#公共部分"}},[e._v("#")]),e._v(" 公共部分")]),e._v(" "),_("h3",{attrs:{id:"actorid"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#actorid"}},[e._v("#")]),e._v(" ActorID")]),e._v(" "),_("p",[_("code",[e._v("ActorID")]),e._v(" 是在 "),_("code",[e._v("damocles")]),e._v(" 组件中使用的、"),_("code",[e._v("SP")]),e._v(" 的标识格式，为数字类型。其与 "),_("code",[e._v("SP")]),e._v(" 的地址是一一对应的关系。")]),e._v(" "),_("p",[e._v("例如：")]),e._v(" "),_("ul",[_("li",[e._v("在测试网络中，"),_("code",[e._v("t01234")]),e._v(" 这样一个 "),_("code",[e._v("SP")]),e._v(" 地址与 "),_("code",[e._v("1234")]),e._v(" 这样一个 "),_("code",[e._v("ActorID")]),e._v(" 一一对应")]),e._v(" "),_("li",[e._v("在主网中，"),_("code",[e._v("f02468")]),e._v(" 这样一个 "),_("code",[e._v("SP")]),e._v(" 地址与 "),_("code",[e._v("2468")]),e._v(" 这样一个 "),_("code",[e._v("ActorID")]),e._v(" 一一对应")])]),e._v(" "),_("p",[e._v("之所以统一使用 "),_("code",[e._v("ActorID")]),e._v(" 这样的标识格式，是为了：")]),e._v(" "),_("ul",[_("li",[_("p",[e._v("方便辨识和书写")])]),e._v(" "),_("li",[_("p",[e._v("避免地址中的网络标识("),_("code",[e._v("t")]),e._v("，"),_("code",[e._v("f")]),e._v(") 和类型标识 ("),_("code",[e._v("t0")]),e._v(" 中的 "),_("code",[e._v("0")]),e._v(") 可能带来的混淆")])])]),e._v(" "),_("h3",{attrs:{id:"objstore"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#objstore"}},[e._v("#")]),e._v(" objstore")]),e._v(" "),_("p",[_("code",[e._v("objstore")]),e._v(" 是基于对象存储模式的存储基础设施抽象。")]),e._v(" "),_("p",[e._v("我们知道，在 "),_("code",[e._v("Filecoin")]),e._v(" 中，与数据交互的各个环节广泛使用了基于文件系统的存储设施抽象。但在实践过程中，我们发现，除了一些相对基础的数据访问模式外，文件系统提供的大量特性并未被使用。")]),e._v(" "),_("p",[e._v("经过分析，我们认为：")]),e._v(" "),_("ol",[_("li",[e._v("在许多场景下，基本的对象存储抽象已经能够满足 "),_("code",[e._v("Filecoin")]),e._v(" 的需求")]),e._v(" "),_("li",[e._v("无论是搭建本地的大规模高可用分布式存储集群，还是使用已有的商业化存储方案，对象存储都有大量选项")]),e._v(" "),_("li",[e._v("存量的、基于文件系统的存储可以经由简单的代理层完成向对象存储接口的转换")])]),e._v(" "),_("p",[e._v("当然，由于在算法层面，一些关键的环节还不支持基于对象存储的抽象（例如 "),_("code",[e._v("MerkleStore")]),e._v("），我们目前仅仅是将文件系统转换为对象存储的形式。希望在将来，通过社区推动"),_("code",[e._v("Filecoin")]),e._v(" 算法层面对于对象存储的原生支持落地，令使用者能够按照自己的需求使用适合的存储方案，甚至混合方案。")]),e._v(" "),_("h3",{attrs:{id:"piece-store"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#piece-store"}},[e._v("#")]),e._v(" piece store")]),e._v(" "),_("p",[_("code",[e._v("piece store")]),e._v(" 是在存储订单封装场景中使用的，用于访问订单 "),_("code",[e._v("piece")]),e._v(" 数据的存储抽象。")]),e._v(" "),_("p",[e._v("这里的 "),_("code",[e._v("piece")]),e._v(" 数据，是指用户发出的、未经过填充 (padding) 和 FR32 转换的原始数据内容。")]),e._v(" "),_("p",[e._v("由于 "),_("code",[e._v("damocles-cluster")]),e._v(" 并不会涉及 "),_("code",[e._v("piece")]),e._v(" 数据的写入，因此只提供了数据读取的接口。")]),e._v(" "),_("h2",{attrs:{id:"damocles-worker-部分"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#damocles-worker-部分"}},[e._v("#")]),e._v(" damocles-worker 部分")]),e._v(" "),_("h3",{attrs:{id:"sealing-store"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#sealing-store"}},[e._v("#")]),e._v(" sealing store")]),e._v(" "),_("p",[_("code",[e._v("sealing store")]),e._v(" 是位于 "),_("code",[e._v("damocles-worker")]),e._v(" 所在宿主机的存储设施，用于临时存放扇区封装过程中产生的数据文件。通常由高速本地存储设备（如 "),_("code",[e._v("nvme")]),e._v("）构成。")]),e._v(" "),_("p",[_("code",[e._v("sealing store")]),e._v("的使用遵循：")]),e._v(" "),_("ul",[_("li",[e._v("一个扇区唯一对应一个 "),_("code",[e._v("sealing store")])]),e._v(" "),_("li",[e._v("一个 "),_("code",[e._v("sealing store")]),e._v(" 在同一时间只会存在一个扇区")])]),e._v(" "),_("p",[e._v("每个 "),_("code",[e._v("sealing store")]),e._v(" 中都会包含 "),_("code",[e._v("meta")]),e._v(" 和 "),_("code",[e._v("data")]),e._v(" 两个子目录，分别存放正在进行中的扇区的状态和封装数据。这样，在"),_("code",[e._v("sealing store")]),e._v(" 之间，状态数据不会相互影响。即使部分"),_("code",[e._v("sealing store")]),e._v("的底层存储设备损坏，影响面也会局限在它所容纳的 "),_("code",[e._v("sealing store")]),e._v(" 范围内。")]),e._v(" "),_("p",[e._v("通常来说，"),_("code",[e._v("sealing store")]),e._v(" 会根据当前宿主机上存储资源数量来进行规划。")]),e._v(" "),_("h3",{attrs:{id:"remote-store"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#remote-store"}},[e._v("#")]),e._v(" remote store")]),e._v(" "),_("p",[_("code",[e._v("remote store")]),e._v(" 是扇区数据的永久存储设施，通常是一个存储集群。")]),e._v(" "),_("p",[e._v("目前在 "),_("code",[e._v("damocles-worker")]),e._v(" 中，"),_("code",[e._v("remote store")]),e._v(" 实现为一套在文件系统之上的对象存储接口封装。")]),e._v(" "),_("p",[e._v("完成封装、等待上链的扇区数据会从 "),_("code",[e._v("sealing store")]),e._v(" 移动到 "),_("code",[e._v("remote store")]),e._v("。")]),e._v(" "),_("p",[e._v("实际上， "),_("code",[e._v("remote store")]),e._v("  更多相对 "),_("code",[e._v("sealing store")]),e._v(" 的本地而言。对于 "),_("code",[e._v("damocles-manager")]),e._v(" 和 "),_("code",[e._v("damocles-worker")]),e._v(" 来说，都需要能够访问这一存储设施。")]),e._v(" "),_("h3",{attrs:{id:"processor"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#processor"}},[e._v("#")]),e._v(" processor")]),e._v(" "),_("p",[_("code",[e._v("processor")]),e._v(" 是扇区封装步骤的执行器。通常来说，每一个独立的步骤会对应一类 "),_("code",[e._v("processor")]),e._v("，如 "),_("code",[e._v("pc1 processor")]),e._v(", "),_("code",[e._v("c2 processor")]),e._v(" 等。使用者可以针对每一类 "),_("code",[e._v("processor")]),e._v(" 设置其并行数量。")]),e._v(" "),_("p",[e._v("通常来说，"),_("code",[e._v("processor")]),e._v(" 会根据当前宿主机上的计算资源数量来进行规划。")]),e._v(" "),_("h5",{attrs:{id:"external-processor"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#external-processor"}},[e._v("#")]),e._v(" external processor")]),e._v(" "),_("p",[_("code",[e._v("external processor")]),e._v(" 是一类特殊的 "),_("code",[e._v("processor")]),e._v("，它们以子进程的形式存在，通过确定的协议，与主进程完成任务上下文的交互，并具体执行某一特定的封装步骤。")]),e._v(" "),_("p",[_("code",[e._v("external processor")]),e._v(" 这一设定的存在，使得"),_("code",[e._v("damocles")]),e._v(" 可以依托操作系统提供的接口，针对子进程进行计算资源的配置和隔离，例如")]),e._v(" "),_("ul",[_("li",[e._v("通过 "),_("code",[e._v("cgroup")]),e._v("选项为 "),_("code",[e._v("pc1 processor")]),e._v(" 指定 "),_("code",[e._v("cpu sets")]),e._v("，以避免 "),_("code",[e._v("pc1")]),e._v(" 阶段的扇区相互抢占 "),_("code",[e._v("cpu")]),e._v("资源")]),e._v(" "),_("li",[e._v("通过 "),_("code",[e._v("numa")]),e._v(" 选项为 "),_("code",[e._v("pc1 processor")]),e._v(" 指定内存分配的倾向性，以降低 "),_("code",[e._v("pc1")]),e._v(" 阶段内存的访问延迟，提高 "),_("code",[e._v("multicore_sdr")]),e._v(" 模式下的缓存预取效率")]),e._v(" "),_("li",[e._v("通过英伟达默认的 GPU 相关环境变量，为多个 "),_("code",[e._v("c2 prcessor")]),e._v(" 各自绑定唯一的可用 GPU，并将锁文件的位置分隔开")])]),e._v(" "),_("p",[e._v("等极其灵活的搭配方式。")]),e._v(" "),_("p",[e._v("除了方便计算资源的配置和隔离之外，"),_("code",[e._v("external processor")]),e._v(" 还使得 "),_("strong",[e._v("非通用或非公开的执行器实现")]),e._v(" 变得可能。任何满足上下文交互协议要求的可执行程序都可以作为 "),_("code",[e._v("external processor")]),e._v("的具体实现被集成进封装流程，这使得诸如：")]),e._v(" "),_("ul",[_("li",[e._v("高度定制化的 "),_("code",[e._v("c2 processor")])]),e._v(" "),_("li",[e._v("基于 GPU 外包的 "),_("code",[e._v("pc2 processor")]),e._v(" 或 "),_("code",[e._v("c2 processor")])])]),e._v(" "),_("p",[e._v("等选项变得易于集成。使用者可以任意选择多种定制化的 "),_("code",[e._v("external processor")]),e._v(" 进行组合，且这种选择不会受限于具体的 "),_("code",[e._v("external processor")]),e._v(" 的开发和维护者是谁。")]),e._v(" "),_("h4",{attrs:{id:"sealing-store-、-processor-和-sector-的关系"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#sealing-store-、-processor-和-sector-的关系"}},[e._v("#")]),e._v(" sealing store 、 processor  和 sector 的关系")]),e._v(" "),_("p",[e._v("在之前的段落中我们提到，"),_("code",[e._v("sealing store")]),e._v(" 和 "),_("code",[e._v("processor")]),e._v(" 分别根据存储资源和计算资源进行规划，那么是否意味着他们之间并不需要 维持 1:1 的配比？")]),e._v(" "),_("p",[e._v("答案是肯定的，原因如下：")]),e._v(" "),_("p",[e._v("在任何一个特定阶段，一个 "),_("code",[e._v("sector")]),e._v(" 所占用的资源是其所占用的计算资源（"),_("code",[e._v("processor")]),e._v("）和存储资源（"),_("code",[e._v("sealing store")]),e._v("）的组合。")]),e._v(" "),_("p",[e._v("在 "),_("code",[e._v("damocles-worker")]),e._v(" 的封装流程中，"),_("code",[e._v("sector")]),e._v(" 从一个阶段进入下一个阶段时，会释放之前占用的计算资源，并尝试申请下一阶段所需要的计算资源。被释放的计算资源完全可以被分配给其他等待中的"),_("code",[e._v("sector")]),e._v("。")]),e._v(" "),_("p",[e._v("举例来说：")]),e._v(" "),_("p",[e._v("通常，基于成本和硬件规格考虑，可规划的 "),_("code",[e._v("sealing store")]),e._v(" 数量往往多于可规划的 "),_("code",[e._v("p1 processor")]),e._v(" 数量。在 "),_("code",[e._v("damocles-worker")]),e._v(" 的封装中，如果一个 "),_("code",[e._v("sector")]),e._v(" 完成了 "),_("code",[e._v("p1")]),e._v(" 阶段的计算，那么释放出来的 "),_("code",[e._v("p1 processor")]),e._v(" 就可以被用于等待中的其他 "),_("code",[e._v("sealing store")]),e._v(" 上的 "),_("code",[e._v("sector")]),e._v("。")]),e._v(" "),_("p",[e._v("这使得硬件资源的高密度利用变得可行。")]),e._v(" "),_("h2",{attrs:{id:"damocles-manager-部分"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#damocles-manager-部分"}},[e._v("#")]),e._v(" damocles-manager 部分")]),e._v(" "),_("h3",{attrs:{id:"基础服务api"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#基础服务api"}},[e._v("#")]),e._v(" 基础服务API")]),e._v(" "),_("p",[e._v("这是 "),_("code",[e._v("damocles")]),e._v(" 依托的服务及其接口定义。")]),e._v(" "),_("p",[e._v("这些服务和接口为 "),_("code",[e._v("damocles")]),e._v(" 提供基础的、与链和其他参与者交互的能力。")]),e._v(" "),_("h4",{attrs:{id:"chain-api"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#chain-api"}},[e._v("#")]),e._v(" chain.API")]),e._v(" "),_("p",[e._v("这是一组定义在 "),_("code",[e._v("venus/venus-shared")]),e._v(" 中的，链相关的接口定义。主要是向 "),_("code",[e._v("damocles")]),e._v(" 提供基础的链服务接口。")]),e._v(" "),_("h4",{attrs:{id:"messager-api"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#messager-api"}},[e._v("#")]),e._v(" messager.API")]),e._v(" "),_("p",[e._v("这是一组定义在 "),_("code",[e._v("venus/venus-shared")]),e._v(" 中的，消息相关的接口定义。主要是向 "),_("code",[e._v("damocles")]),e._v(" 提供发送消息、确认上链和执行结果方面的基础能力。")]),e._v(" "),_("h4",{attrs:{id:"market-api"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#market-api"}},[e._v("#")]),e._v(" market.API")]),e._v(" "),_("p",[e._v("这是一组定义在 "),_("code",[e._v("venus/venus-shared")]),e._v(" 中的，订单相关的接口定义。主要是向 "),_("code",[e._v("damocles")]),e._v(" 提供订单分配、订单数据获取方面的基础能力。")]),e._v(" "),_("h3",{attrs:{id:"randomnessapi"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#randomnessapi"}},[e._v("#")]),e._v(" RandomnessAPI")]),e._v(" "),_("p",[e._v("这是对 "),_("code",[e._v("chain.API")]),e._v(" 的一层简单封装，主要用于提供扇区封装、维持过程中所需的随机数信息。")]),e._v(" "),_("p",[e._v("这一层封装使得 "),_("code",[e._v("damocles-worker")]),e._v(" 及其他模块仅需要根据用途获取相应的结果，而不必在意具体的请求对象（Drand or Filecoin）或请求格式。")]),e._v(" "),_("h3",{attrs:{id:"minerinfoapi"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#minerinfoapi"}},[e._v("#")]),e._v(" MinerInfoAPI")]),e._v(" "),_("p",[e._v("这是对 "),_("code",[e._v("chain.API")]),e._v(" 的一层封装，主要提供 "),_("code",[e._v("SP")]),e._v(" 粒度的信息。")]),e._v(" "),_("h3",{attrs:{id:"sectormanager"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#sectormanager"}},[e._v("#")]),e._v(" SectorManager")]),e._v(" "),_("p",[e._v("这是管理扇区分配的模块。主要负责根据 "),_("code",[e._v("damocles-worker")]),e._v(" 提交的参进行扇区编号的分配。")]),e._v(" "),_("p",[e._v("可以为多个 "),_("code",[e._v("SP")]),e._v(" 、不同的扇区大小提供支持。")]),e._v(" "),_("h3",{attrs:{id:"dealmanager"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#dealmanager"}},[e._v("#")]),e._v(" DealManager")]),e._v(" "),_("p",[e._v("这是管理订单的模块，主要负责为空白的扇区分配可容纳的订单 "),_("code",[e._v("piece")]),e._v("，以及对失败的扇区中的订单进行释放。")]),e._v(" "),_("h3",{attrs:{id:"commitmentmanager"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#commitmentmanager"}},[e._v("#")]),e._v(" CommitmentManager")]),e._v(" "),_("p",[e._v("这是管理扇区消息上链的模块。主要负责按照预先指定的策略对 "),_("code",[e._v("PreCommit")]),e._v(" 和 "),_("code",[e._v("ProveCommit")]),e._v(" 消息进行单条或聚合式的提交，并观察上链结果。")]),e._v(" "),_("h3",{attrs:{id:"sectorstatemanager"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#sectorstatemanager"}},[e._v("#")]),e._v(" SectorStateManager")]),e._v(" "),_("p",[e._v("这是管理进行中的扇区的状态的模块。主要负责接收来自 "),_("code",[e._v("damocles-worker")]),e._v("的状态和异常信息上报。")]),e._v(" "),_("h3",{attrs:{id:"sectorindexer"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#sectorindexer"}},[e._v("#")]),e._v(" SectorIndexer")]),e._v(" "),_("p",[e._v("这是管理已完成的扇区位置的模块。主要负责定位指定的扇区，常用在 "),_("code",[e._v("PoSt")]),e._v(" 的计算过程中。")])])}),[],!1,null,null,null);v.default=r.exports}}]);
(window.webpackJsonp=window.webpackJsonp||[]).push([[17],{383:function(e,t,a){"use strict";a.r(t);var o=a(17),s=Object(o.a)({},(function(){var e=this,t=e.$createElement,a=e._self._c||t;return a("ContentSlotsDistributor",{attrs:{"slot-key":e.$parent.slotKey}},[a("h1",{attrs:{id:"import-existing-sector-data"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#import-existing-sector-data"}},[e._v("#")]),e._v(" Import existing sector data")]),e._v(" "),a("p",[e._v("When one would like to migrate the sector storage directory sealed by other sealer solution to "),a("code",[e._v("venus-cluster")]),e._v(", it needs to use "),a("code",[e._v("venus-sector-manager")]),e._v(" to import and update the corresponding configuration file.")]),e._v(" "),a("h2",{attrs:{id:"import-and-verify"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#import-and-verify"}},[e._v("#")]),e._v(" Import and verify")]),e._v(" "),a("p",[a("strong",[e._v("Note")]),e._v(": Both import and validation need to be done without "),a("code",[e._v("venus-sector-manager daemon")]),e._v(" being started.")]),e._v(" "),a("h3",{attrs:{id:"import"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#import"}},[e._v("#")]),e._v(" import")]),e._v(" "),a("p",[a("code",[e._v("venus-sector-manager")]),e._v(" provides an import tool called "),a("code",[e._v("storage attach")]),e._v(", which can be used as following:")]),e._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[e._v("venus-sector-manager util storage attach --verbose --name={storage name} <path>\n")])])]),a("ul",[a("li",[a("code",[e._v("name")]),e._v(" is an optional parameter;")]),e._v(" "),a("li",[a("code",[e._v("<path>")]),e._v(" is the storage path, which is converted to an absolute path during import.")])]),e._v(" "),a("p",[e._v("For details of "),a("code",[e._v("name")]),e._v(" and "),a("code",[e._v("<path>")]),e._v(", please refer to [Common.PersistStores](../04.venus-sector-manager-config.md\n#commonpersiststores).")]),e._v(" "),a("p",[e._v("For example, by using...")]),e._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[e._v("venus-sector-manager util storage attach --verbose --name=a -v ./mock-tmp/remote\n")])])]),a("p",[e._v("logs similar to the following would likely be produced:")]),e._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[e._v('2022-03-11T16:03:52.492+0800 DEBUG policy policy/const.go:18 NETWORK SETUP {"name": "mainnet"}\n2022-03-11T16:03:52.493+0800 INFO cmd internal/util_storage.go:104 use match pattern "/home/dtynn/proj/github.com/ipfs-force-community/venus-cluster/mock-tmp/remote /sealed/*" {"name": "a", "strict": false, "read-only": false}\n2022-03-11T16:03:52.493+0800 INFO cmd internal/util_storage.go:121 path "s-t010000-16" matched=true {"name": "a", "strict": false, "read-only ": false}\n2022-03-11T16:03:52.494+0800 INFO cmd internal/util_storage.go:121 path "s-t010000-17" matched=true {"name": "a", "strict": false, "read-only ": false}\n2022-03-11T16:03:52.494+0800 INFO cmd internal/util_storage.go:121 path "s-t010000-18" matched=true {"name": "a", "strict": false, "read-only ": false}\n2022-03-11T16:03:52.508+0800 INFO cmd internal/util_storage.go:148 sector indexer updated for s-t010000-16 {"name": "a", "strict": false, "read-only": false}\n2022-03-11T16:03:52.509+0800 INFO cmd internal/util_storage.go:148 sector indexer updated for s-t010000-17 {"name": "a", "strict": false, "read-only": false}\n2022-03-11T16:03:52.509+0800 INFO cmd internal/util_storage.go:148 sector indexer updated for s-t010000-18 {"name": "a", "strict": false, "read-only": false}\n2022-03-11T16:03:52.509+0800 INFO cmd internal/util_storage.go:152 3 sectors out of 3 files have been updated {"name": "a", "strict": false, "read-only": false}\n2022-03-11T16:03:52.509+0800 WARN cmd internal/util_storage.go:153 add the section below into the config file: {"name": "a", "strict": false, "read-only": false}\n\n[[Common.PersistStores]]\nName = "a"\nPath = "/home/dtynn/proj/github.com/ipfs-force-community/venus-cluster/mock-tmp/remote"\nStrict = false\nReadOnly = false\n')])])]),a("p",[e._v("At this point, the directory import has been completed, and the location information of all sectors has also been recorded.\nWe can then complete the import by copying configuration in the output into the configuration file of "),a("code",[e._v("venus-sector-manager")]),e._v(".")]),e._v(" "),a("h4",{attrs:{id:"reimport"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#reimport"}},[e._v("#")]),e._v(" reimport")]),e._v(" "),a("p",[e._v("If we find that the information supplied during import is wrong, such as "),a("code",[e._v("--name")]),e._v(" is misspelled, we can re-import with correct information to complete the import process.\nThe location information of the sector will be overwritten and updated.")]),e._v(" "),a("h4",{attrs:{id:"separation-of-sealed-file-and-cache-dir"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#separation-of-sealed-file-and-cache-dir"}},[e._v("#")]),e._v(" separation of sealed_file and cache_dir")]),e._v(" "),a("p",[e._v("Some sealer components allow "),a("code",[e._v("sealed_file")]),e._v(" and "),a("code",[e._v("cache_dir")]),e._v(" to be on different storage instances, in which case regular import may fail to locate sector files.\nIn this case, you can enable the split scan mode by adding the command line parameter "),a("code",[e._v("--allow-splitted")]),e._v(". In this mode, paths in the "),a("code",[e._v("sealed")]),e._v(" folder and the "),a("code",[e._v("cache")]),e._v(" folder that match the sector naming rules will be scanned separately.")]),e._v(" "),a("p",[e._v("At this point, the log will look similar to:")]),e._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[e._v('2022-04-19T19:11:55.137+0800 DEBUG policy policy/const.go:18 NETWORK SETUP {"name": "mainnet"}\n2022-04-19T19:11:55.154+0800 INFO cmd internal/util_storage.go:120 scan for sectors(upgrade=false) {"name": "p3", "strict": false, "read-only": false , "splitted": true}\n2022-04-19T19:11:55.154+0800 INFO cmd internal/util_storage.go:211 0 sectors out of 0 files have been found {"name": "p3", "strict": false, "read-only": false, "splitted": true}\n2022-04-19T19:11:55.154+0800 INFO cmd internal/util_storage.go:145 scan for splitted cache dirs(upgrade=false) {"name": "p3", "strict": false, "read-only" : false, "splitted": true}\n2022-04-19T19:11:55.155+0800 INFO cmd internal/util_storage.go:211 3 sectors out of 3 files have been found {"name": "p3", "strict": false, "read-only": false, "splitted": true}\n2022-04-19T19:11:55.156+0800 INFO cmd internal/util_storage.go:120 scan for sectors(upgrade=true) {"name": "p3", "strict": false, "read-only": false , "splitted": true}\n2022-04-19T19:11:55.156+0800 INFO cmd internal/util_storage.go:211 0 sectors out of 0 files have been found {"name": "p3", "strict": false, "read-only": false, "splitted": true}\n2022-04-19T19:11:55.156+0800 INFO cmd internal/util_storage.go:145 scan for splitted cache dirs(upgrade=true) {"name": "p3", "strict": false, "read-only" : false, "splitted": true}\n2022-04-19T19:11:55.156+0800 INFO cmd internal/util_storage.go:211 0 sectors out of 0 files have been found {"name": "p3", "strict": false, "read-only": false, "splitted": true}\n2022-04-19T19:11:55.156+0800 WARN cmd internal/util_storage.go:166 add the section below into the config file: {"name": "p3", "strict": false, "read-only": false, "splitted": true}\n\n[[Common.PersistStores]]\nName = "p3"\nPath = "/home/dtynn/proj/github.com/ipfs-force-community/venus-cluster/\nmock-tmp/pstore3"\nStrict = false\nReadOnly = false\n')])])]),a("p",[e._v("Notes for using this mode:")]),e._v(" "),a("ul",[a("li",[e._v("There are no duplicate stored files due to storage exceptions in the target directory")]),e._v(" "),a("li",[e._v("Sectors with only "),a("code",[e._v("cache_dir")]),e._v(" and no corresponding "),a("code",[e._v("sealed_file")]),e._v(" won't be located")])]),e._v(" "),a("h3",{attrs:{id:"validation"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#validation"}},[e._v("#")]),e._v(" Validation")]),e._v(" "),a("p",[e._v("The "),a("code",[e._v("storage find")]),e._v(" tool provided by "),a("code",[e._v("venus-sector-manager")]),e._v(" can be used to check whether the result of sector import is correct. It can be used as following:")]),e._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[e._v("venus-sector-manager util storage find <miner actor id> <sector number>\n")])])]),a("p",[e._v("Continuing with an example of the validation command demonstrated above, we want to verify that the sector "),a("code",[e._v("s-t010000-17")]),e._v(" has been recorded correctly, we can use:")]),e._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[e._v("venus-sector-manager util storage find 10000 17\n")])])]),a("p",[e._v("Usually a log similar to the following would be produced:")]),e._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[e._v('2022-04-19T19:13:15.235+0800 DEBUG policy policy/const.go:18 NETWORK SETUP {"name": "mainnet"}\n2022-04-19T19:13:15.249+0800 INFO cmd internal/util_storage.go:279 sector s-t010000-17 located, sealed file in "a", cache dir in "a"\n2022-04-19T19:13:15.249+0800 INFO cmd internal/util_storage.go:285 store instance exists {"instance": "a"}\n2022-04-19T19:13:15.249+0800 INFO cmd internal/util_storage.go:285 store instance exists {"instance": "a"}\n')])])]),a("p",[e._v("This means that our import and configuration work is complete.")]),e._v(" "),a("h4",{attrs:{id:"validation-exception-sector-information-was-not-recorded-successfully"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#validation-exception-sector-information-was-not-recorded-successfully"}},[e._v("#")]),e._v(" Validation exception: sector information was not recorded successfully")]),e._v(" "),a("p",[e._v("If you encounter something like the following during the verification process...")]),e._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[e._v("2022-03-11T16:45:59.120+0800 WARN cmd internal/util_storage.go:214 s-t010000-17 not found\n")])])]),a("p",[e._v("Such log indicates that the specified sector was not imported successfully, and we need to recheck the import process.")]),e._v(" "),a("h4",{attrs:{id:"validation-exception-storage-configuration-not-updated"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#validation-exception-storage-configuration-not-updated"}},[e._v("#")]),e._v(" Validation exception: Storage configuration not updated")]),e._v(" "),a("p",[e._v("If you encounter something like the following during the verification process...")]),e._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[e._v('2022-03-11T16:22:34.044+0800 DEBUG policy policy/const.go:18 NETWORK SETUP {"name": "mainnet"}\n2022-03-11T16:22:34.059+0800 INFO cmd internal/util_storage.go:218 found s-t010000-17 in "a"\n2022-03-11T16:22:34.059+0800 WARN cmd internal/util_storage.go:227 store instance not found, check your config file\n')])])]),a("p",[e._v("Such a log indicates that the configuration file of "),a("code",[e._v("venus-sector-manager")]),e._v(" has not been successfully updated, and we need to update the configuration according to the method mentioned above.")])])}),[],!1,null,null,null);t.default=s.exports}}]);
(window.webpackJsonp=window.webpackJsonp||[]).push([[39],{406:function(t,s,a){"use strict";a.r(s);var e=a(17),n=Object(e.a)({},(function(){var t=this,s=t.$createElement,a=t._self._c||s;return a("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[a("h1",{attrs:{id:"独立运行的-poster-节点"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#独立运行的-poster-节点"}},[t._v("#")]),t._v(" 独立运行的 PoSter 节点")]),t._v(" "),a("p",[t._v("在早期版本中，虽然 "),a("code",[t._v("damocles-manager")]),t._v(" 已经支持通过 "),a("code",[t._v("daemon run")]),t._v(" 命令的 "),a("code",[t._v("--poster")]),t._v("、"),a("code",[t._v("--miner")]),t._v(" 参数来选择是否启用相应的模块，但由于 "),a("code",[t._v("post")]),t._v(" 证明过程与扇区定位信息的强关联，使得真正使用时，局限性比较大，且难以扩展。")]),t._v(" "),a("p",[t._v("从 v0.2.0 版本起，我们提供了一系列的功能组合，使得易用、可扩展的独立 PoSter 节点成为大体量 "),a("code",[t._v("SP")]),t._v(" 的一种可选方案。")]),t._v(" "),a("p",[t._v("以下，我们会介绍这些新的功能点，并提供一种通过这些功能完成独立 PoSter 节点部署的实践。后续文档都以开启 "),a("code",[t._v("--poster")]),t._v(" 的节点作为示例，独立的 "),a("code",[t._v("--miner")]),t._v(" 节点运作方式与之类似，不再单独阐述。")]),t._v(" "),a("hr"),t._v(" "),a("p",[t._v("在 v0.8.0 版本中，damocles 支持三种方式独立运行 PoSter 节点，分别是 worker-prover 模式、代理节点模式、ext-prover 模式(外部执行器模式)。")]),t._v(" "),a("h2",{attrs:{id:"worker-prover-模式"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#worker-prover-模式"}},[t._v("#")]),t._v(" worker-prover 模式")]),t._v(" "),a("p",[t._v("worker-prover 模式是 v0.8.0 新增的功能，特点是简单，可以非常轻松的支持多机 wdpost。")]),t._v(" "),a("h3",{attrs:{id:"基本原理"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#基本原理"}},[t._v("#")]),t._v(" 基本原理")]),t._v(" "),a("p",[t._v("worker-prover 模式利用 damocles-worker 计算 window post 证明， 通过 RPC 的方式从 damocles-manager 获取 window post 任务和返回计算的结果。")]),t._v(" "),a("p",[t._v("damocles-worker 新增 wdpost planner 用于执行 window post 任务。")]),t._v(" "),a("h4",{attrs:{id:"architecture"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#architecture"}},[t._v("#")]),t._v(" Architecture")]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("                +-----------------------------------+\n                |     damocles-manager  daemon      |\n                |     with --worker-prover falg     |\n                |                                   |\n                |        +-----------------+        |\n                |        |damocles-manager |        |\n                |        |  poster module  |        |\n                |        +-------+-^-------+        |\n                |           send | |recv            |\n                |                | |                |\n                |        +-------v-+-------+        |\n                |        |  worker-prover  |        |\n       +--------+--------\x3e      module     <--------+--------+\n       |        |        +--------^--------+        |        |\n       |        |                 |                 |        |\n       |        +-----------------+-----------------+        |\n       |                          |                          |\n-------+--------------------------+--------------------------+------------\n       |                          |                          |\n       | pull job                 | pull job                 | pull job\n       | push res                 | push res                 | push res\n       | by rpc                   | by rpc                   | by rpc\n       |                          |                          |\n+------+--------+         +-------+-------+           +------+--------+\n|damocles-worker|         |damocles-worker|           |damocles-worker|\n|wdpost planner |         |wdpost planner |  ...      |wdpost planner |\n+---------------+         +---------------+           +---------------+\n")])])]),a("h3",{attrs:{id:"damocles-manager-配置与启动"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#damocles-manager-配置与启动"}},[t._v("#")]),t._v(" damocles-manager 配置与启动")]),t._v(" "),a("p",[t._v("新增配置:")]),t._v(" "),a("div",{staticClass:"language-toml extra-class"},[a("pre",{pre:!0,attrs:{class:"language-toml"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# ~/.damocles-manager/sector-manager.cfg")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# ...")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),a("span",{pre:!0,attrs:{class:"token table class-name"}},[t._v("Common.Proving.WorkerProver")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# WindowPoSt 任务的最大尝试次数, 可选项, 数字类型")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 默认值为 2")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 尝试次数超过 JobMaxTry 的 WindowPoSt 任务只能通过手动 reset 的方式被重新执行")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token key property"}},[t._v("JobMaxTry")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# WindowPoSt 任务的心跳超时时间, 可选项, 时间字符串类型")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 默认值为 15s")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 超过此时间没有发送心跳的任务将会被设置为失败并重试")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token key property"}},[t._v("HeartbeatTimeout")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"15s"')]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# WindowPoSt 任务的心跳超时时间, 可选项, 时间字符串类型")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 默认值为 25h")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 创建时间超过此时间的 WindowPoSt 任务将会被删除")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token key property"}},[t._v("JobLifetime")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"25h0m0s"')]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# ...")]),t._v("\n")])])]),a("p",[t._v("启动 damocles-manager 进程:")]),t._v(" "),a("div",{staticClass:"language-sh extra-class"},[a("pre",{pre:!0,attrs:{class:"language-sh"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# --miner flag 可选添加，表示启动 miner 模块用于执行 WinningPoSt 并出块")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# --poster flag 必须添加，表示启动 WindowPoSt 模块")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# --worker-prover 必须添加，表示使用 WorkerProver 模块执行 WindowPoSt")]),t._v("\n./damocles-manager daemon run --miner --poster --worker-prover\n")])])]),a("h3",{attrs:{id:"damocles-worker-配置"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#damocles-worker-配置"}},[t._v("#")]),t._v(" damocles-worker 配置")]),t._v(" "),a("div",{staticClass:"language-toml extra-class"},[a("pre",{pre:!0,attrs:{class:"language-toml"}},[a("code",[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),a("span",{pre:!0,attrs:{class:"token table class-name"}},[t._v("sealing_thread")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 配置使用 wdpost plan")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token key property"}},[t._v("plan")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"wdpost"')]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),a("span",{pre:!0,attrs:{class:"token table class-name"}},[t._v("attached")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 配置此 worker 执行 window post 任务过程中会用到的永久存储")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token key property"}},[t._v("name")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"miner-6666-store"')]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token key property"}},[t._v("location")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"/mnt/miner-6666-store"')]),t._v("\n\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 控制 window_post 任务并发 (可选)，不配置则不限制")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),a("span",{pre:!0,attrs:{class:"token table class-name"}},[t._v("processors.limitation.concurrent")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token key property"}},[t._v("window_post")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),a("span",{pre:!0,attrs:{class:"token table class-name"}},[t._v("processors.window_post")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 使用自定义 wdpost 算法 (可选)， 如果不配置 bin，则默认使用内置算法")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token key property"}},[t._v("bin")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("=")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"~/my_algorithm"')]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token key property"}},[t._v("args")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"window_post"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 配置自定义算法的环境变量 (可选)")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token key property"}},[t._v("envs")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token key property"}},[t._v("BELLMAN_GPU_INDEXS")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("=")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"0"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token key property"}},[t._v("CUDA_VISIBLE_DEVICES")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("=")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"0"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 配置本进程最大并发数量 (可选)，不配置则不限制")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token key property"}},[t._v("concurrent")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),t._v("\n")])])]),a("h5",{attrs:{id:"一份最简的只启动一个-wdpost-sealing-thread-的配置如下"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#一份最简的只启动一个-wdpost-sealing-thread-的配置如下"}},[t._v("#")]),t._v(" 一份最简的只启动一个 wdpost sealing_thread 的配置如下:")]),t._v(" "),a("div",{staticClass:"language-toml extra-class"},[a("pre",{pre:!0,attrs:{class:"language-toml"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# /path/to/your-damocles-worker-config.toml")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),a("span",{pre:!0,attrs:{class:"token table class-name"}},[t._v("worker")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token key property"}},[t._v("name")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"damocles-worker-USA-01"')]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),a("span",{pre:!0,attrs:{class:"token table class-name"}},[t._v("sector_manager")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token key property"}},[t._v("rpc_client.addr")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"/ip4/your-damocles-manager-address-here/tcp/1789"')]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),a("span",{pre:!0,attrs:{class:"token table class-name"}},[t._v("sealing_thread")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token key property"}},[t._v("plan")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"wdpost"')]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 尝试领取任务的时间间隔，默认为 60s，")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 针对 wdpost plan 我们可以调小此值便于更快的领取到新的 wdpost 任务")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token key property"}},[t._v("sealing.recover_interval")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"15s"')]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# sealing.allowed_miners = [6666]")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v('# sealing.allowed_sizes = ["32GiB"]')]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# ...")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),a("span",{pre:!0,attrs:{class:"token table class-name"}},[t._v("attached")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token key property"}},[t._v("name")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"miner-6666-store"')]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token key property"}},[t._v("location")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"/mnt/miner-6666-store"')]),t._v("\n")])])]),a("h3",{attrs:{id:"管理-window-post-任务"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#管理-window-post-任务"}},[t._v("#")]),t._v(" 管理 window post 任务")]),t._v(" "),a("ul",[a("li",[a("h4",{attrs:{id:"显示-window-post-任务列表"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#显示-window-post-任务列表"}},[t._v("#")]),t._v(" 显示 window post 任务列表")])])]),t._v(" "),a("div",{staticClass:"language-sh extra-class"},[a("pre",{pre:!0,attrs:{class:"language-sh"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 默认显示未完成的任务和失败的任务， 其中 DDL 字段表示任务的 deadline Index, Try 字段是任务的尝试次数")]),t._v("\n./damocles-manager util worker wdpost list\n\nJobID           MinerID  DDL  Worker        State       Try  CreateAt        Elapsed      Error\n3FgfEnvrub1  "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1037")]),t._v("     "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("3")]),t._v("    "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("10.122")]),t._v(".63.30  ReadyToRun  "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),t._v("    07-27 "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("16")]),t._v(":37:31  -\ngbCVH4TUgEf  "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1037")]),t._v("     "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),t._v("                  ReadyToRun  "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),t._v("    07-27 "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("16")]),t._v(":35:56  -\nCrotWCLaXLa  "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1037")]),t._v("     "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),t._v("    "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("10.122")]),t._v(".63.30  Succeed     "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),t._v("    07-27 "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("17")]),t._v(":19:04  6m38s"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("done"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 显示全部任务")]),t._v("\n./damocles-manager util worker wdpost list --all\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# ...")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 显示 window post 任务详细信息")]),t._v("\n./damocles-manager util worker wdpost list --detail\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# ...")]),t._v("\n")])])]),a("ul",[a("li",[a("h4",{attrs:{id:"重置任务"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#重置任务"}},[t._v("#")]),t._v(" 重置任务")])])]),t._v(" "),a("p",[t._v("当 window post 任务执行失败且自动重试次数达到上限时，可以手动重置任务状态，使其可以继续被 damocles-worker 领取并执行。")]),t._v(" "),a("div",{staticClass:"language-sh extra-class"},[a("pre",{pre:!0,attrs:{class:"language-sh"}},[a("code",[t._v("./damocles-manager util worker wdpost reset gbCVH4TUgEf 3FgfEnvrub1\n")])])]),a("ul",[a("li",[a("h4",{attrs:{id:"删除任务"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#删除任务"}},[t._v("#")]),t._v(" 删除任务")])])]),t._v(" "),a("p",[t._v("删除任务和重置任务能达到的效果类似。当执行了删除任务的命令后，damocles-manager 的重试机制会检测当前 deadline 的 window post 任务是否存在于数据库中，如果不存在则会重新下发一遍任务，并记录到数据库中。")]),t._v(" "),a("p",[t._v("另外 worker-prover 会自动的定时删除创建时间超过一定时间的任务 (默认为 25 小时，时间可配置)。")]),t._v(" "),a("div",{staticClass:"language-sh extra-class"},[a("pre",{pre:!0,attrs:{class:"language-sh"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 删除指定的任务")]),t._v("\n./damocles-manager util worker wdpost remove gbCVH4TUgEf 3FgfEnvrub1\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 删除全部任务")]),t._v("\n./damocles-manager util worker wdpost remove-all --really-do-it\n")])])]),a("h2",{attrs:{id:"代理节点模式"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#代理节点模式"}},[t._v("#")]),t._v(" 代理节点模式")]),t._v(" "),a("p",[t._v("我们知道，对于 PoSter 节点来说，最重要的能力是获取实时、准确的扇区定位信息。在当前 "),a("code",[t._v("damocles-manager")]),t._v(" 版本中，我们暂时仅提供基于本地内嵌式 kv 数据库的元数据管理方式。")]),t._v(" "),a("p",[t._v("这使得数据仅能被一个进程管理，无法进行跨进程的直接数据共享。")]),t._v(" "),a("p",[t._v("因此，我们设计了代理节点模式，将部分元数据通过网络接口提供给其他需要的节点，以此实现数据共享。")]),t._v(" "),a("h3",{attrs:{id:"代理节点的使用方式"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#代理节点的使用方式"}},[t._v("#")]),t._v(" 代理节点的使用方式")]),t._v(" "),a("p",[t._v("我们在 "),a("code",[t._v("daemon run")]),t._v(" 命令中增加了 "),a("code",[t._v("--proxy")]),t._v(" 参数。它的格式是 "),a("code",[t._v("{ip}:{port}")]),t._v(" 这样的地址格式。当启动命令包含有效的 "),a("code",[t._v("--proxy")]),t._v(" 参数时，节点将会以其指向的另一个 "),a("code",[t._v("damocles-manager")]),t._v(" 节点作为数据源，并构造出必要的元数据（只读）管理模块。")]),t._v(" "),a("p",[t._v("除了 "),a("code",[t._v("--proxy")]),t._v(" 外，我们还提供了控制具体数据管理模块是否启用代理模式的开关。")]),t._v(" "),a("p",[t._v("目前，我们暂时仅提供 "),a("code",[t._v("--proxy-sector-indexer-off")]),t._v(" 这一个开关。当启用 "),a("code",[t._v("--proxy-sector-indexer-off")]),t._v(" 时，节点会使用自己的数据目录下的 "),a("code",[t._v("SectorIndexer")]),t._v(" 数据库。")]),t._v(" "),a("blockquote",[a("p",[t._v("如果代理节点采用本地数据库且集群还在封装扇区时，不要启用 "),a("code",[t._v("--proxy-sector-indexer-off")]),t._v("，新封装的扇区元数据无法同步到代理节点的数据库，一旦 "),a("code",[t._v("winningPoSt")]),t._v(" 选中了新封装扇区，无法正确计算证明，出块会失败！")])]),t._v(" "),a("p",[t._v("举例来说，如果按 "),a("code",[t._v("damocles-manager daemon run --miner")]),t._v(" 命令启动，那么将会存在一个使用 "),a("code",[t._v("~/.damocles-manager")]),t._v(" 作为数据目录，监听 "),a("code",[t._v("1789")]),t._v(" 端口的 "),a("code",[t._v("damocles-manager")]),t._v(" 实例，且启用挖矿模块。")]),t._v(" "),a("p",[t._v("这时，我们可以通过以下命令，在同一台机器上初始化并启动一个以上述实例作为数据源的代理节点，这个代理节点将会使用 "),a("code",[t._v("~/.damocles-manager2")]),t._v(" 作为数据目录，并监听 "),a("code",[t._v("2789")]),t._v(" 端口。")]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v('damocles-manager --home ~/.damocles-manager2 daemon init\n// 维护配置文件\ndamocles-manager --home ~/.damocles-manager2 daemon run --proxy="127.0.0.1:1789" --listen=":2789" --poster\n')])])]),a("p",[t._v("代理节点能够提供与源节点完全一致且实时的扇区定位信息。")]),t._v(" "),a("h3",{attrs:{id:"代理节点使用已有配置文件"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#代理节点使用已有配置文件"}},[t._v("#")]),t._v(" 代理节点使用已有配置文件")]),t._v(" "),a("p",[t._v("按照上一节所述的方法，我们已经可以启动一个代理节点，但这种启动方式还存在一个问题：代理节点的配置文件需要再次编写一遍，或从源节点的数据目录中拷贝过来。这会带来额外的维护工作，尤其是在配置文件可能频繁发生变化的时候。")]),t._v(" "),a("p",[t._v("为此，我们还提供了一个 "),a("code",[t._v("--conf-dir")]),t._v(" 参数，它的格式是一个可用的目录路径。当启动命令包含有效的 "),a("code",[t._v("--conf-dir")]),t._v(" 参数时，节点将会使用指定目录中已存在的配置文件作为自己的配置文件。")]),t._v(" "),a("p",[t._v("这样，就可以省去编写、维护在同一台机器上的、为同一组集群提供服务的、不同源节点和代理节点的配置文件的工作。")]),t._v(" "),a("p",[t._v("基于这个功能，上一节中所提到的代理节点启动方式可以变成：")]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v('damocles-manager --home ~/.damocles-manager2 daemon run --proxy="127.0.0.1:1789" --listen=":2789" --conf-dir="~/.damocles-manager" --poster\n')])])]),a("p",[t._v("此时，源节点和代理节点将会使用同一批配置文件。")]),t._v(" "),a("h2",{attrs:{id:"ext-prover-执行器"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#ext-prover-执行器"}},[t._v("#")]),t._v(" ext-prover 执行器")]),t._v(" "),a("p",[t._v("除了共享扇区信息之外，独立的 PoSter 节点面临的另一个挑战则是硬件资源的利用。")]),t._v(" "),a("p",[t._v("受限于底层算法库，计算节点对于 GPU 的使用只能以进程为单位。这使得 PoSter 节点难以有效发挥多块 GPU 的计算能力，也难以在多个 "),a("code",[t._v("SP")]),t._v(" 存在 "),a("code",[t._v("WindostPoSt")]),t._v(" 证明窗口期冲突的情况下，安全地避免证明超时。")]),t._v(" "),a("p",[t._v("为此，我们提供了类似 "),a("code",[t._v("damocles-worker")]),t._v(" 中 "),a("code",[t._v("ext processor")]),t._v(" 的 "),a("code",[t._v("ext-prover")]),t._v(" 机制。")]),t._v(" "),a("p",[a("code",[t._v("ext-prover")]),t._v(" 机制包含两个组成部分：")]),t._v(" "),a("ol",[a("li",[a("code",[t._v("daemon run")]),t._v(" 命令的 "),a("code",[t._v("--ext-prover")]),t._v(" 参数")]),t._v(" "),a("li",[t._v("节点数据目录中的 "),a("code",[t._v("ext-prover.cfg")]),t._v(" 配置文件")])]),t._v(" "),a("p",[t._v("一个默认的 "),a("code",[t._v("ext-prover.cfg")]),t._v(" 文件形如：")]),t._v(" "),a("div",{staticClass:"language-toml extra-class"},[a("pre",{pre:!0,attrs:{class:"language-toml"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# Default config:")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#[[WdPost]]")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v('#Bin = "/path/to/custom/bin"')]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v('#Args = ["args1", "args2", "args3"]')]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#Concurrent = 1")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#Weight = 1")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#ReadyTimeoutSecs = 5")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#[WdPost.Envs]")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v('#ENV_KEY = "ENV_VAL"')]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#[[WinPost]]")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v('#Bin = "/path/to/custom/bin"')]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v('#Args = ["args1", "args2", "args3"]')]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#Concurrent = 1")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#Weight = 1")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#ReadyTimeoutSecs = 5")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#[WinPost.Envs]")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v('#ENV_KEY = "ENV_VAL"')]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#")]),t._v("\n")])])]),a("p",[t._v("在最新版本中，"),a("code",[t._v("daemon init")]),t._v(" 会初始化 "),a("code",[t._v("ext-prover.cfg")]),t._v(" 文件。")]),t._v(" "),a("p",[t._v("使用者可以自行编写，或从一个由最新版本初始化的数据目录中拷贝相应文件到已存在的数据目中。")]),t._v(" "),a("p",[a("code",[t._v("ext-prover.cfg")]),t._v(" 中各配置项的作用方式与 "),a("code",[t._v("damocles-worker")]),t._v(" 中的配置块极为类似，使用者可以查阅相应文档进行参考。")]),t._v(" "),a("p",[t._v("当 "),a("code",[t._v("damocles-manager")]),t._v(" 的启动命令中包含 "),a("code",[t._v("--ext-prover")]),t._v(" 参数时，节点将使用配置目录中的 "),a("code",[t._v("ext-prover.cfg")]),t._v(" 配置文件作为启动子进程的依据。对于这个配置文件，设置 "),a("code",[t._v("--conf-dir")]),t._v(" 参数也会带来效果。")]),t._v(" "),a("p",[t._v("使用者看到类似这样的日志时，就表明 "),a("code",[t._v("ext-prover")]),t._v(" 已就绪。")]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v('2022-04-27T19:15:00.441+0800    INFO    porver-ext      ext/prover.go:122       response loop start     {"pid": 24764, "ppid": 24732, "loop": "resp"}\n2022-04-27T19:15:00.441+0800    INFO    porver-ext      ext/prover.go:155       request loop start      {"pid": 24764, "ppid": 24732, "loop": "req"}\n2022-04-27T19:15:00.468+0800    INFO    processor-cmd   processor/processor.go:35       ready   {"pid": 24764, "ppid": 24732, "proc": "wdpost"}\n')])])]),a("h2",{attrs:{id:"部署实践"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#部署实践"}},[t._v("#")]),t._v(" 部署实践")]),t._v(" "),a("p",[t._v("假设我们存在一台配置了 8 GPU 的节点机器，那么我们可以通过以下配置方式来提供更强的时空证明处理能力。")]),t._v(" "),a("ol",[a("li",[a("p",[t._v("配置并启动源节点")]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("damocles-manager daemon run --miner\n")])])]),a("p",[t._v("此时，源节点只提供封装相关的功能和能力；")])]),t._v(" "),a("li",[a("p",[t._v("配置 "),a("code",[t._v("ext-prover.cfg")]),t._v(" 文件：")]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v('[[WdPost]]\n[WdPost.Envs]\nCUDA_VISIBLE_DEVICES = "0"\nTMPDIR = "/tmp/ext-prover0/"\n\n[[WdPost]]\n[WdPost.Envs]\nCUDA_VISIBLE_DEVICES = "1"\nTMPDIR = "/tmp/ext-prover1/"\n\n[[WdPost]]\n[WdPost.Envs]\nCUDA_VISIBLE_DEVICES = "2"\nTMPDIR = "/tmp/ext-prover2/"\n\n[[WdPost]]\n[WdPost.Envs]\nCUDA_VISIBLE_DEVICES = "3"\nTMPDIR = "/tmp/ext-prover3/"\n\n[[WdPost]]\n[WdPost.Envs]\nCUDA_VISIBLE_DEVICES = "4"\nTMPDIR = "/tmp/ext-prover4/"\n\n[[WdPost]]\n[WdPost.Envs]\nCUDA_VISIBLE_DEVICES = "5"\nTMPDIR = "/tmp/ext-prover5/"\n\n[[WdPost]]\n[WdPost.Envs]\nCUDA_VISIBLE_DEVICES = "6"\nTMPDIR = "/tmp/ext-prover6/"\n\n[[WdPost]]\n[WdPost.Envs]\nCUDA_VISIBLE_DEVICES = "7"\nTMPDIR = "/tmp/ext-prover7/"\n\n')])])])]),t._v(" "),a("li",[a("p",[t._v("初始化并启动独立 "),a("code",[t._v("PoSter")]),t._v(" 节点")]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v('damocles-manager --home=~/.damocles-individual-poster daemon init\ndamocles-manager --home=~/.damocles-individual-poster daemon run --proxy="127.0.0.1:1789" --poster --listen=":2789" --conf-dir="~/.damocles-manager" --ext-prover\n')])])])])]),t._v(" "),a("p",[t._v("这种部署方式下，")]),t._v(" "),a("ul",[a("li",[t._v("源节点同时提供封装和挖矿的支持")]),t._v(" "),a("li",[t._v("代理节点提供 WindowPoSt 的支持\n"),a("ul",[a("li",[t._v("代理节点启用 ext-prover，且每个子进程独立使用一块 GPU、一个计算锁目录")])])])]),t._v(" "),a("p",[t._v("winning post 和 window post 之间不会因设备使用而形成冲突")]),t._v(" "),a("h2",{attrs:{id:"局限性"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#局限性"}},[t._v("#")]),t._v(" 局限性")]),t._v(" "),a("p",[t._v("当目前为止，我们已经讲解了独立 "),a("code",[t._v("PoSter")]),t._v(" 节点依托的功能、原理和简单的使用范例。")]),t._v(" "),a("p",[t._v("但是，这种模式对于超大规模的 "),a("code",[t._v("SP")]),t._v(" 集群仍然有一些局限性，具体体现在：")]),t._v(" "),a("ul",[a("li",[t._v("时空证明的调度、证明窗口期的严重冲突，仍然需要在一定程度依赖运维层面的调配；")])])])}),[],!1,null,null,null);s.default=n.exports}}]);
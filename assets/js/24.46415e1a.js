(window.webpackJsonp=window.webpackJsonp||[]).push([[24],{390:function(t,e,n){"use strict";n.r(e);var a=n(17),s=Object(a.a)({},(function(){var t=this,e=t.$createElement,n=t._self._c||e;return n("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[n("h1",{attrs:{id:"damocles-worker-configuration-guide"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#damocles-worker-configuration-guide"}},[t._v("#")]),t._v(" damocles-worker configuration guide")]),t._v(" "),n("h2",{attrs:{id:"resource-consumption-at-each-stage-of-sealing-job-32-gib-sector"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#resource-consumption-at-each-stage-of-sealing-job-32-gib-sector"}},[t._v("#")]),t._v(" Resource consumption at each stage of sealing job  (32 GiB sector)")]),t._v(" "),n("p",[t._v("Exmaple computer specs:")]),t._v(" "),n("ul",[n("li",[t._v("CPU:  AMD EPYC 7642 (max MHz: 2300)")]),t._v(" "),n("li",[t._v("GPU: RTX 3080")]),t._v(" "),n("li",[t._v("Memory: DIMM DDR4 Synchronous Registered (Buffered) 2933 MHz (0.3 ns)")])]),t._v(" "),n("table",[n("thead",[n("tr",[n("th",[t._v("Stage")]),t._v(" "),n("th",[t._v("Concurrency")]),t._v(" "),n("th",[t._v("Duration")]),t._v(" "),n("th",[t._v("RAM")]),t._v(" "),n("th",[t._v("CPU")]),t._v(" "),n("th",[t._v("GPU")]),t._v(" "),n("th",[t._v("DiskIO read")]),t._v(" "),n("th",[t._v("DiskIO wirte")]),t._v(" "),n("th",[t._v("Remark")])])]),t._v(" "),n("tbody",[n("tr",[n("td",[t._v("WindowPoSt")]),t._v(" "),n("td",[t._v("1")]),t._v(" "),n("td",[t._v("~4-10mins")]),t._v(" "),n("td",[t._v("~120GiB")]),t._v(" "),n("td",[n("code",[t._v("RAYON_NUM_THREADS")]),t._v("*100%")]),t._v(" "),n("td",[t._v("✓")]),t._v(" "),n("td",[t._v("TODO")]),t._v(" "),n("td",[t._v("-")]),t._v(" "),n("td")]),t._v(" "),n("tr",[n("td",[t._v("WinningPoSt")]),t._v(" "),n("td",[t._v("1")]),t._v(" "),n("td",[t._v("~1-10s")]),t._v(" "),n("td",[t._v("-")]),t._v(" "),n("td",[t._v("-")]),t._v(" "),n("td",[t._v("-")]),t._v(" "),n("td",[t._v("-")]),t._v(" "),n("td",[t._v("-")]),t._v(" "),n("td")]),t._v(" "),n("tr",[n("td",[t._v("AddPieces")]),t._v(" "),n("td",[t._v("1")]),t._v(" "),n("td",[t._v("~3mins")]),t._v(" "),n("td",[t._v("~210MiB")]),t._v(" "),n("td",[n("code",[t._v("RAYON_NUM_THREADS")]),t._v("*100%")]),t._v(" "),n("td",[t._v("x")]),t._v(" "),n("td",[t._v("<=32GiB")]),t._v(" "),n("td",[t._v("32GiB")]),t._v(" "),n("td")]),t._v(" "),n("tr",[n("td",[t._v("TreeD")]),t._v(" "),n("td",[t._v("1")]),t._v(" "),n("td",[t._v("~1min")]),t._v(" "),n("td",[t._v("~47GiB")]),t._v(" "),n("td",[n("code",[t._v("RAYON_NUM_THREADS")]),t._v("*100%")]),t._v(" "),n("td",[t._v("x")]),t._v(" "),n("td",[t._v("32GiB")]),t._v(" "),n("td",[t._v("64GiB")]),t._v(" "),n("td",[t._v("64 GiB sector ~60GiB RAM")])]),t._v(" "),n("tr",[n("td",[t._v("PC1")]),t._v(" "),n("td",[t._v("1")]),t._v(" "),n("td",[t._v("~177mins")]),t._v(" "),n("td",[t._v("<=64GiB")]),t._v(" "),n("td",[t._v("150%")]),t._v(" "),n("td",[t._v("x")]),t._v(" "),n("td",[t._v("-")]),t._v(" "),n("td",[t._v("352GiB")]),t._v(" "),n("td")]),t._v(" "),n("tr",[n("td",[t._v("PC2")]),t._v(" "),n("td",[t._v("1")]),t._v(" "),n("td",[t._v("~10-13mins")]),t._v(" "),n("td",[t._v("~64GiB")]),t._v(" "),n("td",[n("code",[t._v("RAYON_NUM_THREADS")]),t._v("*100%")]),t._v(" "),n("td",[t._v("✓")]),t._v(" "),n("td",[t._v("384GiB")]),t._v(" "),n("td",[t._v("~37GiB")]),t._v(" "),n("td")]),t._v(" "),n("tr",[n("td",[t._v("SupraPC2")]),t._v(" "),n("td",[t._v("1")]),t._v(" "),n("td",[t._v("~2-5mins")]),t._v(" "),n("td",[t._v("~40GiB")]),t._v(" "),n("td",[t._v("~400%")]),t._v(" "),n("td",[t._v("✓")]),t._v(" "),n("td",[t._v("384GiB")]),t._v(" "),n("td",[t._v("~37GiB")]),t._v(" "),n("td")]),t._v(" "),n("tr",[n("td",[t._v("WaitSeed")]),t._v(" "),n("td",[t._v("-")]),t._v(" "),n("td",[t._v("75mins")]),t._v(" "),n("td",[t._v("-")]),t._v(" "),n("td",[t._v("-")]),t._v(" "),n("td",[t._v("x")]),t._v(" "),n("td",[t._v("-")]),t._v(" "),n("td",[t._v("-")]),t._v(" "),n("td")]),t._v(" "),n("tr",[n("td",[t._v("C1")]),t._v(" "),n("td",[t._v("1")]),t._v(" "),n("td",[t._v("~1s")]),t._v(" "),n("td",[t._v("-")]),t._v(" "),n("td",[t._v("-")]),t._v(" "),n("td",[t._v("x")]),t._v(" "),n("td",[t._v("-")]),t._v(" "),n("td",[t._v("-")]),t._v(" "),n("td")]),t._v(" "),n("tr",[n("td",[t._v("C2")]),t._v(" "),n("td",[t._v("1")]),t._v(" "),n("td",[t._v("~13-16mins")]),t._v(" "),n("td",[t._v("TODO")]),t._v(" "),n("td",[n("code",[t._v("RAYON_NUM_THREADS")]),t._v("*100%")]),t._v(" "),n("td",[t._v("✓")]),t._v(" "),n("td",[t._v("-")]),t._v(" "),n("td",[t._v("-")]),t._v(" "),n("td")]),t._v(" "),n("tr",[n("td",[t._v("SupraC2")]),t._v(" "),n("td",[t._v("1")]),t._v(" "),n("td",[t._v("~3-5mins")]),t._v(" "),n("td",[t._v("128 GiB")]),t._v(" "),n("td",[n("code",[t._v("RAYON_NUM_THREADS")]),t._v("*100%")]),t._v(" "),n("td",[t._v("✓")]),t._v(" "),n("td",[t._v("-")]),t._v(" "),n("td",[t._v("-")]),t._v(" "),n("td")]),t._v(" "),n("tr",[n("td",[t._v("SnapEncode")]),t._v(" "),n("td",[t._v("1")]),t._v(" "),n("td",[t._v("~3-5mins")]),t._v(" "),n("td",[t._v("TODO")]),t._v(" "),n("td",[n("code",[t._v("RAYON_NUM_THREADS")]),t._v("*100%")]),t._v(" "),n("td",[t._v("✓")]),t._v(" "),n("td",[t._v("~32GiB(NFS)")]),t._v(" "),n("td",[t._v("~32GiB(NFS)")]),t._v(" "),n("td",[t._v("It is recommended to run multiple SnapEncode tasks concurrently on each GPU to enable concurrent I/O and reduce GPU idle time")])]),t._v(" "),n("tr",[n("td",[t._v("SnapProve")]),t._v(" "),n("td",[t._v("1")]),t._v(" "),n("td",[t._v("~3-5mins")]),t._v(" "),n("td",[t._v("TODO")]),t._v(" "),n("td",[n("code",[t._v("RAYON_NUM_THREADS")]),t._v("*100%")]),t._v(" "),n("td",[t._v("✓")]),t._v(" "),n("td",[t._v("-")]),t._v(" "),n("td",[t._v("-")]),t._v(" "),n("td")]),t._v(" "),n("tr",[n("td",[t._v("SupraSnapProve")]),t._v(" "),n("td",[t._v("1")]),t._v(" "),n("td",[t._v("~3-5mins")]),t._v(" "),n("td",[t._v("TODO")]),t._v(" "),n("td",[n("code",[t._v("RAYON_NUM_THREADS")]),t._v("*100%")]),t._v(" "),n("td",[t._v("✓")]),t._v(" "),n("td",[t._v("~32GiB(NFS)")]),t._v(" "),n("td",[t._v("~32GiB(NFS)")]),t._v(" "),n("td")]),t._v(" "),n("tr",[n("td",[t._v("Unseal")]),t._v(" "),n("td",[t._v("1")]),t._v(" "),n("td",[t._v("TODO")]),t._v(" "),n("td",[t._v("TODO")]),t._v(" "),n("td",[t._v("TODO")]),t._v(" "),n("td",[t._v("x")]),t._v(" "),n("td",[t._v("TODO")]),t._v(" "),n("td",[t._v("TODO")]),t._v(" "),n("td")])])]),t._v(" "),n("p",[t._v("Note: The RAYON_NUM_THREADS environment variable is used to configure the number of threads used by tasks, and it defaults to the number of CPU cores.")]),t._v(" "),n("h2",{attrs:{id:"damocles-worker-util-documentation"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#damocles-worker-util-documentation"}},[t._v("#")]),t._v(" "),n("code",[t._v("damocles-worker-util")]),t._v(" documentation")]),t._v(" "),n("p",[n("code",[t._v("damocles-worker-util")]),t._v(" contains a set of "),n("code",[t._v("damocles-worker")]),t._v(" related utilities. These include:")]),t._v(" "),n("ul",[n("li",[t._v("hwinfo (Hardware information)")]),t._v(" "),n("li",[t._v("sealcalc (Sealing calculator)")])]),t._v(" "),n("h3",{attrs:{id:"hwinfo"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#hwinfo"}},[t._v("#")]),t._v(" hwinfo")]),t._v(" "),n("p",[n("code",[t._v("hwinfo")]),t._v(" displays hardware information so that we can configure "),n("code",[t._v("damocles-worker")]),t._v(" accordingly given the output of hardware information and use them more effectively.")]),t._v(" "),n("p",[t._v("The information currently available from hwinfo is as follows:")]),t._v(" "),n("ul",[n("li",[t._v("CPU topology (including the number of CPU cores, NUMA Memory Node, CPU Cache, etc.)")]),t._v(" "),n("li",[t._v("Disk information")]),t._v(" "),n("li",[t._v("GPU information")]),t._v(" "),n("li",[t._v("Memory information")])]),t._v(" "),n("p",[t._v("Parameter Description:")]),t._v(" "),n("div",{staticClass:"language- extra-class"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[t._v("damocles-worker-util-hwinfo\n// Display hardware information\n\nUSAGE:\n    damocles-worker-util hwinfo [OPTIONS]\n\nOPTIONS:\n        --full  // display full CPU topology information\n    -h, --help \t// print help information\n")])])]),n("h4",{attrs:{id:"hwinfo-dependency-installation"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#hwinfo-dependency-installation"}},[t._v("#")]),t._v(" hwinfo dependency installation")]),t._v(" "),n("ul",[n("li",[t._v("hwloc 2.x is used to get CPU topology information")]),t._v(" "),n("li",[t._v("OpenCL is used to get GPU information")])]),t._v(" "),n("h5",{attrs:{id:"hwloc-2-x-installation"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#hwloc-2-x-installation"}},[t._v("#")]),t._v(" hwloc 2.x installation")]),t._v(" "),n("h6",{attrs:{id:"on-ubuntu-20-04-or-later-it-can-be-installed-directly-using-apt"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#on-ubuntu-20-04-or-later-it-can-be-installed-directly-using-apt"}},[t._v("#")]),t._v(" On Ubuntu 20.04 or later, it can be installed directly using "),n("code",[t._v("apt")])]),t._v(" "),n("div",{staticClass:"language- extra-class"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[t._v(" apt install hwloc=2.\\*\n")])])]),n("h6",{attrs:{id:"source-installation"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#source-installation"}},[t._v("#")]),t._v(" Source installation:")]),t._v(" "),n("div",{staticClass:"language-shell extra-class"},[n("pre",{pre:!0,attrs:{class:"language-shell"}},[n("code",[n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# Install necessary tools.")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("apt")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("install")]),t._v(" -y "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("wget")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("make")]),t._v(" gcc\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# Download hwloc-2.7.1.tar.gz")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("wget")]),t._v(" https://download.open-mpi.org/release/hwloc/v2.7/hwloc-2.7.1.tar.gz\n\n"),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("tar")]),t._v(" -zxpf hwloc-2.7.1.tar.gz\n"),n("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v("cd")]),t._v(" hwloc-2.7.1\n./configure --prefix"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("/usr/local\n"),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("make")]),t._v(" -j"),n("span",{pre:!0,attrs:{class:"token variable"}},[n("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$(")]),t._v("nproc"),n("span",{pre:!0,attrs:{class:"token variable"}},[t._v(")")])]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("sudo")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("make")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("install")]),t._v("\nldconfig /usr/local/lib\n")])])]),n("h5",{attrs:{id:"opencl-installation"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#opencl-installation"}},[t._v("#")]),t._v(" OpenCL installation")]),t._v(" "),n("div",{staticClass:"language- extra-class"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[t._v("apt install ocl-icd-opencl-dev\n")])])]),n("h4",{attrs:{id:"hwinfo-example"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#hwinfo-example"}},[t._v("#")]),t._v(" hwinfo example")]),t._v(" "),n("p",[t._v("Example run on a machine with 2 32-core CPUs:")]),t._v(" "),n("div",{staticClass:"language- extra-class"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[t._v("damocles-worker-util hwinfo\n")])])]),n("p",[t._v("output:")]),t._v(" "),n("div",{staticClass:"language- extra-class"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[t._v("CPU topology:\nMachine (503.55 GiB)\n├── Package (251.57 GiB) (*** *** *** 32-Core Processor)\n│ ├── NUMANode (#0 251.57 GiB)\n│ ├── L3 (#0 16 MiB)\n│ │ └── PU #0 + PU #1 + PU #2 + PU #3\n│ ├── L3 (#1 16 MiB)\n│ │ └── PU #4 + PU #5 + PU #6 + PU #7\n│ ├── L3 (#2 16 MiB)\n│ │ └── PU #8 + PU #9 + PU #10 + PU #11\n│ ├── L3 (#3 16 MiB)\n│ │ └── PU #12 + PU #13 + PU #14 + PU #15\n│ ├── L3 (#4 16 MiB)\n│ │ └── PU #16 + PU #17 + PU #18 + PU #19\n│ ├── L3 (#5 16 MiB)\n│ │ └── PU #20 + PU #21 + PU #22 + PU #23\n│ ├── L3 (#6 16 MiB)\n│ │ └── PU #24 + PU #25 + PU #26 + PU #27\n│ └── L3 (#7 16 MiB)\n│ └── PU #28 + PU #29 + PU #30 + PU #31\n└── Package (251.98 GiB) (*** *** *** 32-Core Processor)\n    ├── NUMANode (#1 251.98 GiB)\n    ├── L3 (#8 16 MiB)\n    │ └── PU #32 + PU #33 + PU #34 + PU #35\n    ├── L3 (#9 16 MiB)\n    │ └── PU #36 + PU #37 + PU #38 + PU #39\n    ├── L3 (#10 16 MiB)\n    │ └── PU #40 + PU #41 + PU #42 + PU #43\n    ├── L3 (#11 16 MiB)\n    │ └── PU #44 + PU #45 + PU #46 + PU #47\n    ├── L3 (#12 16 MiB)\n    │ └── PU #48 + PU #49 + PU #50 + PU #51\n    ├── L3 (#13 16 MiB)\n    │ └── PU #52 + PU #53 + PU #54 + PU #55\n    ├── L3 (#14 16 MiB)\n    │ └── PU #56 + PU #57 + PU #58 + PU #59\n    └── L3 (#15 16 MiB)\n        └── PU #60 + PU #61 + PU #62 + PU #63\n\nDisks:\n╭───────────┬─────────────┬─────────────┬────────────┬───────────────────────────────────────╮\n│ Disk type │ Device name │ Mount point │ Filesystem │                 Space                 │\n├───────────┼─────────────┼─────────────┼────────────┼───────────────────────────────────────┤\n│ SSD       │ /dev/sda3   │ /           │ ext4       │ 346.87 GiB / 434.68 GiB (79.80% used) │\n├───────────┼─────────────┼─────────────┼────────────┼───────────────────────────────────────┤\n│ SSD       │ /dev/sda2   │ /boot       │ ext4       │ 675.00 MiB / 3.87 GiB (17.01% used)   │\n├───────────┼─────────────┼─────────────┼────────────┼───────────────────────────────────────┤\n│ SSD       │ /dev/md127  │ /mnt/mount  │ ext4       │ 4.83 TiB / 13.86 TiB (34.86% used)    │\n╰───────────┴─────────────┴─────────────┴────────────┴───────────────────────────────────────╯\n\nGPU:\n╭─────────────────────────┬────────┬───────────╮\n│           Name          │ Vendor │   Memory  │\n├─────────────────────────┼────────┼───────────┤\n│ NVIDIA GeForce RTX 3080 │ NVIDIA │ 9.78 GiB  │\n├─────────────────────────┼────────┼───────────┤\n│ NVIDIA GeForce RTX 3080 │ NVIDIA │ 9.78 GiB  │\n├─────────────────────────┼────────┼───────────┤\n│ NVIDIA GeForce RTX 3080 │ NVIDIA │ 9.78 GiB  │\n╰─────────────────────────┴────────┴───────────╯\n\n\n\nMemory:\n╭──────────────┬───────────────────┬────────────┬─────────────╮\n│ Total memory │    Used memory    │ Total swap │  Used swap  │\n├──────────────┼───────────────────┼────────────┼─────────────┤\n│ 515.63 GiB   │ 33.51 GiB (6.50%) │ 0 B        │ 0 B (0.00%) │\n╰──────────────┴───────────────────┴────────────┴─────────────╯\n\n")])])]),n("p",[t._v("From the output CPU topology information, this machine has two NUMANodes:")]),t._v(" "),n("ol",[n("li",[t._v("CPU set of NUMANode #0: 0-31")]),t._v(" "),n("li",[t._v("CPU set of NUMANode #1: 32-63")])]),t._v(" "),n("p",[t._v("We can modify the external "),n("code",[t._v("processor")]),t._v(" configuration group in the "),n("code",[t._v("damocles-worker")]),t._v(" configuration file ("),n("RouterLink",{attrs:{to:"/operation/damocles-worker-config.html#processorsstage_name"}},[t._v("[[processors.{stage_name}]]")]),t._v(").")],1),t._v(" "),n("p",[t._v("Through "),n("code",[t._v("cgroup.cpuset")]),t._v(" + "),n("code",[t._v("numa_preferred")]),t._v(" configuration items, the external "),n("code",[t._v("processor")]),t._v(" is restricted to only use the CPU in the specified NUMANode, and memory will also be allocated from the said NUMANode first, thereby improving the CPU efficiency ("),n("strong",[t._v("from  v0.5.0 or later, damocles "),n("RouterLink",{attrs:{to:"/operation/15.damocles-worker_PC1_HugeTLB_Pages_support.html"}},[t._v("supports loading NUMA-affinity hugepage memory files")]),t._v("; if this feature is enabled, cpuset can be allocated across NUMA nodes without performance impact")],1),t._v(").")]),t._v(" "),n("p",[t._v("example:")]),t._v(" "),n("div",{staticClass:"language-toml extra-class"},[n("pre",{pre:!0,attrs:{class:"language-toml"}},[n("code",[n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# damocles-worker.toml")]),t._v("\n\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("processors"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("stage_name"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token key property"}},[t._v("numa_preferred")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("=")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token key property"}},[t._v("cgroup.cpuset")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("=")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[t._v('"0-3"')]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# ...")]),t._v("\n\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("processors"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("stage_name"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token key property"}},[t._v("numa_preferred")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("=")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token key property"}},[t._v("cgroup.cpuset")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("=")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[t._v('"32-35"')]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# ...")]),t._v("\n")])])]),n("hr"),t._v(" "),n("h3",{attrs:{id:"sealcalc"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#sealcalc"}},[t._v("#")]),t._v(" sealcalc")]),t._v(" "),n("p",[t._v("Given fixed parameters, "),n("code",[t._v("sealcalc")]),t._v(" computes the running status of tasks in each stage during respective time period to maximize the sealing efficiency by adjusting the maximum concurrent number of tasks and "),n("code",[t._v("sealing_threads")]),t._v(".")]),t._v(" "),n("p",[t._v("Parameter Description:")]),t._v(" "),n("div",{staticClass:"language- extra-class"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[t._v("USAGE:\n    damocles-worker-util sealcalc [OPTIONS] --tree_d_mins <tree_d_mins> --tree_d_concurrent <tree_d_concurrent> --pc1_mins <pc1_mins> --pc1_concurrent <pc1_concurrent> --pc2_mins <pc2_mins> --pc2_concurrent <pc2_concurrent> --c2_mins <c2_mins > --c2_concurrent <c2_concurrent> --sealing_threads <sealing_threads>\n\nOPTIONS:\n        --c2_concurrent <c2_concurrent>                Specifies the maximum number of concurrent c2 tasks\n        --c2_mins <c2_mins>                            Specifies the time it takes to execute one c2 task, unit: minutes\n        --calculate_days <calculate_days>              Calculate the total duration, unit: days [default: 30]\n        --calculate_step_mins <calculate_step_mins>    Output step duration, unit: minutes [default: 60], if this value is 60, each line of results will be separated by 1 hour\n        --csv                                          Output results in csv format\n -h, --help                                            Print help information\n        --pc1_concurrent <pc1_concurrent>              Specifies the maximum number of concurrent pc1 tasks\n        --pc1_mins <pc1_mins>                          Specifies the time it takes to execute one pc1 task, unit: minutes\n        --pc2_concurrent <pc2_concurrent>              Specifies the maximum number of concurrent pc2 tasks\n        --pc2_mins <pc2_mins>                          Specifies the time it takes to execute one pc2 task, unit: minutes\n        --sealing_threads <sealing_threads>            Specify the number of sealing_threads\n        --seed_mins <seed_mins>                        Specifies the time to wait for the seed, unit: minutes [default: 80]\n        --tree_d_concurrent <tree_d_concurrent>        Specifies the maximum number of concurrent tree_d tasks\n        --tree_d_mins <tree_d_mins>                    Specify the time it takes to execute one tree_d task, unit: minutes\n")])])]),n("h4",{attrs:{id:"sealcalc-example"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#sealcalc-example"}},[t._v("#")]),t._v(" sealcalc example:")]),t._v(" "),n("h5",{attrs:{id:"fixed-parameters"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#fixed-parameters"}},[t._v("#")]),t._v(" Fixed parameters:")]),t._v(" "),n("ul",[n("li",[t._v("Time required for tree_d task execution: 10 minutes")]),t._v(" "),n("li",[t._v("Time required for pc1 task execution: 320 minutes")]),t._v(" "),n("li",[t._v("Time required for pc2 task execution: 25 minutes")]),t._v(" "),n("li",[t._v("Time required for c2 task execution: 18 minutes")])]),t._v(" "),n("h5",{attrs:{id:"adjustable-parameters"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#adjustable-parameters"}},[t._v("#")]),t._v(" Adjustable parameters:")]),t._v(" "),n("ul",[n("li",[t._v("sealing_threads number: 18")]),t._v(" "),n("li",[t._v("tree_d maximum concurrency: 2")]),t._v(" "),n("li",[t._v("pc1 maximum concurrency: 10")]),t._v(" "),n("li",[t._v("pc2 maximum concurrency: 5")]),t._v(" "),n("li",[t._v("c2 maximum concurrency: 2")])]),t._v(" "),n("div",{staticClass:"language- extra-class"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[t._v("damocles-worker-util sealcalc --tree_d_mins=10 --pc1_mins=320 --pc2_mins=1 --c2_mins=2 --tree_d_concurrent=2 --pc1_concurrent=10 --pc2_concurrent=5 --c2_concurrent=2 --sealing_threads= 18\n")])])]),n("p",[t._v("The output is as follows:")]),t._v(" "),n("div",{staticClass:"language- extra-class"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[t._v("┌sealing calculator─────────────────────────────────────────────────────┐\n│time    sealing    tree_d      pc1      pc2     wait    c2     finished│\n│(mins)  threads    (...)      (...)     (...)   seed   (...)   sectors │\n│                                                                       │\n│0       2/18        2/2       0/10       0/5      0     0/2      0     │\n│60      14/18       2/2       10/10      0/5      0     0/2      0     │\n│120     18/18       0/2       10/10      0/5      0     0/2      0     │\n│180     18/18       0/2       10/10      0/5      0     0/2      0     │\n│240     18/18       0/2       10/10      0/5      0     0/2      0     │\n│300     18/18       0/2       10/10      0/5      0     0/2      0     │\n│360     18/18       0/2       10/10      2/5      6     0/2      0     │\n│420     18/18       2/2       8/10       0/5      8     0/2      2     │\n│480     18/18       0/2       10/10      0/5      0     0/2      10    │\n│540     18/18       0/2       10/10      0/5      0     0/2      10    │\n│600     18/18       0/2       10/10      0/5      0     0/2      10    │\n│660     18/18       0/2       10/10      2/5      2     0/2      10    │\n│720     18/18       0/2       10/10      0/5      8     0/2      10    │\n│780     18/18       0/2       10/10      0/5      2     0/2      18    │\n│840     18/18       0/2       10/10      0/5      0     0/2      20    │\n│900     18/18       0/2       10/10      0/5      0     0/2      20    │\n│960     18/18       0/2       10/10      0/5      0     0/2      20    │\n│1020    18/18       0/2       10/10      0/5      8     0/2      20    │\n│1080    18/18       2/2       10/10      0/5      4     0/2      26    │\n│1140    18/18       0/2       10/10      0/5      2     0/2      28    │\n│1200    18/18       0/2       10/10      0/5      0     0/2      30    │\n│1260    18/18       0/2       10/10      0/5      0     0/2      30    │\n│1320    18/18       0/2       10/10      2/5      6     0/2      30    │\n│1380    18/18       2/2       10/10      0/5      6     0/2      32    │\n│1440    18/18       0/2       10/10      0/5      2     0/2      38    │\n│1500    18/18       0/2       10/10      0/5      0     0/2      40    │\n│1560    18/18       0/2       10/10      0/5      0     0/2      40    │\n│1620    18/18       0/2       10/10      2/5      2     0/2      40    │\n│1680    18/18       0/2       10/10      0/5      8     0/2      40    │\n│1740    18/18       0/2       10/10      0/5      2     0/2      48    │\n└───────────────────────────────────────────────────────────────────────┘\n\n")])])]),n("p",[n("em",[t._v("Arrow keys to turn pages")])]),t._v(" "),n("p",[t._v("Description of each column of the output result:")]),t._v(" "),n("ul",[n("li",[t._v("time (mins): time, unit: minutes. Each item of data output is the result of running within one step")]),t._v(" "),n("li",[t._v("sealing thread (running/total): sealing thread status (running thread/total thread)")]),t._v(" "),n("li",[t._v("tree_d (running/total): task status of tree_d stage (number of running tasks/total number of tasks)")]),t._v(" "),n("li",[t._v("pc1 (running/total): task status of pc1 stage (number of running tasks/total number of tasks)")]),t._v(" "),n("li",[t._v("pc2 (running/total): task status of pc2 stage (number of running tasks/total number of tasks)")]),t._v(" "),n("li",[t._v("wait seed: the number of tasks waiting for the seed")]),t._v(" "),n("li",[t._v("c2 (running/total): task status of c2 stage (number of running tasks/total number of tasks)")]),t._v(" "),n("li",[t._v("finish sector: the sector completed up to this step")])]),t._v(" "),n("p",[t._v("We can maximize the sealing efficiency by continuously adjusting the above-mentioned "),n("a",{attrs:{href:"#Adjustable-parameters"}},[t._v("adjustable parameters")]),t._v(". These parameters can be used as a reference for the configuration of "),n("code",[t._v("damocles-worker")]),t._v(".")])])}),[],!1,null,null,null);e.default=s.exports}}]);
(window.webpackJsonp=window.webpackJsonp||[]).push([[21],{387:function(t,e,s){"use strict";s.r(e);var a=s(17),n=Object(a.a)({},(function(){var t=this,e=t.$createElement,s=t._self._c||e;return s("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[s("h1",{attrs:{id:"configuration-of-damocles-manager"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#configuration-of-damocles-manager"}},[t._v("#")]),t._v(" Configuration of damocles-manager")]),t._v(" "),s("p",[s("code",[t._v("damocles-manager")]),t._v(" is the main component for interacting with the chain and maintaining the sectors. Let's take a look at its configuration file structure.")]),t._v(" "),s("p",[t._v("After initialization, we can get a copy of the default configuration:")]),t._v(" "),s("div",{staticClass:"language-toml extra-class"},[s("pre",{pre:!0,attrs:{class:"language-toml"}},[s("code",[s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# Default config:")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{pre:!0,attrs:{class:"token table class-name"}},[t._v("Common")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{pre:!0,attrs:{class:"token table class-name"}},[t._v("Common.API")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v('#Chain = "/ip4/{api_host}/tcp/{api_port}"')]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v('#Messager = "/ip4/{api_host}/tcp/{api_port}"')]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v('#Market = "/ip4/{api_host}/tcp/{api_port}"')]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v('#Gateway = ["/ip4/{api_host}/tcp/{api_port}"]')]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v('#Token = "{some token}"')]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v('#ChainEventInterval = "1m0s"')]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{pre:!0,attrs:{class:"token table class-name"}},[t._v("Common.PieceStores")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v('#Name = "{store_name}"')]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v('#Path = "{store_path}"')]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v('#Plugin = ""')]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v('#PluginName = "s3store"')]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{pre:!0,attrs:{class:"token table class-name"}},[t._v("Common.PieceStores.Meta")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v('#SomeKey = "SomeValue"')]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{pre:!0,attrs:{class:"token table class-name"}},[t._v("Common.PersistStores")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v('#Name = "{store_name}"')]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v('#Path = "{store_path}"')]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#Strict = false")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#ReadOnly = false")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#Weight = 0")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#AllowMiners = [1, 2]")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#DenyMiners = [3, 4]")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v('#Plugin = ""')]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v('#PluginName = "s3store"')]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{pre:!0,attrs:{class:"token table class-name"}},[t._v("Common.PersistStores.Meta")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v('#SomeKey = "SomeValue"')]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{pre:!0,attrs:{class:"token table class-name"}},[t._v("Common.DB")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v('#Driver = "badger"')]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{pre:!0,attrs:{class:"token table class-name"}},[t._v("Common.DB.Badger")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v('#BaseDir = ""')]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{pre:!0,attrs:{class:"token table class-name"}},[t._v("Common.Proving")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#ParallelCheckLimit = 128")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v('#SingleCheckTimeout = "10m0s"')]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v('#PartitionCheckTimeout = "20m0s"')]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{pre:!0,attrs:{class:"token table class-name"}},[t._v("Miners")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#Actor = 10086")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{pre:!0,attrs:{class:"token table class-name"}},[t._v("Miners.Sector")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#InitNumber = 0")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#MinNumber = 10")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#MaxNumber = 1000000")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#Enabled = true")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#EnableDeals = false")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#LifetimeDays = 540")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#Verbose = false")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{pre:!0,attrs:{class:"token table class-name"}},[t._v("Miners.SnapUp")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#Enabled = false")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v('#Sender = "f1abjxfbp274xpdqcpuaykwkfb43omjotacm2p3za"')]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#SendFund = true")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#GasOverEstimation = 1.2")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#GasOverPremium = 0.0")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v('#GasFeeCap = "5 nanoFIL"')]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v('#MaxFeeCap = ""')]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#CleanupCCData = true")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#MessageConfidence = 15")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#ReleaseConfidence = 30")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{pre:!0,attrs:{class:"token table class-name"}},[t._v("Miners.SnapUp.Retry")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#MaxAttempts = 10")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v('#PollInterval = "3m0s"')]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v('#APIFailureWait = "3m0s"')]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v('#LocalFailureWait = "3m0s"')]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{pre:!0,attrs:{class:"token table class-name"}},[t._v("Miners.Commitment")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#Confidence = 10")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{pre:!0,attrs:{class:"token table class-name"}},[t._v("Miners.Commitment.Pre")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v('#Sender = "f1abjxfbp274xpdqcpuaykwkfb43omjotacm2p3za"')]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#SendFund = true")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#GasOverEstimation = 1.2")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#GasOverPremium = 0.0")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v('#GasFeeCap = "5 nanoFIL"')]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v('#MaxFeeCap = ""')]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{pre:!0,attrs:{class:"token table class-name"}},[t._v("Miners.Commitment.Pre.Batch")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#Enabled = false")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#Threshold = 16")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v('#MaxWait = "1h0m0s"')]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v('#CheckInterval = "1m0s"')]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#GasOverEstimation = 1.2")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#GasOverPremium = 0.0")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v('#GasFeeCap = "5 nanoFIL"')]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v('#MaxFeeCap = ""')]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{pre:!0,attrs:{class:"token table class-name"}},[t._v("Miners.Commitment.Prove")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v('#Sender = "f1abjxfbp274xpdqcpuaykwkfb43omjotacm2p3za"')]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#SendFund = true")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#GasOverEstimation = 1.2")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#GasOverPremium = 0.0")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v('#GasFeeCap = "5 nanoFIL"')]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v('#MaxFeeCap = ""')]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{pre:!0,attrs:{class:"token table class-name"}},[t._v("Miners.Commitment.Prove.Batch")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#Enabled = false")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#Threshold = 16")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v('#MaxWait = "1h0m0s"')]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v('#CheckInterval = "1m0s"')]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#GasOverEstimation = 1.2")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#GasOverPremium = 0.0")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v('#GasFeeCap = "5 nanoFIL"')]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v('#MaxFeeCap = ""')]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{pre:!0,attrs:{class:"token table class-name"}},[t._v("Miners.Commitment.Terminate")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v('#Sender = "f1abjxfbp274xpdqcpuaykwkfb43omjotacm2p3za"')]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#SendFund = true")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#GasOverEstimation = 1.2")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#GasOverPremium = 0.0")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v('#GasFeeCap = "5 nanoFIL"')]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v('#MaxFeeCap = ""')]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{pre:!0,attrs:{class:"token table class-name"}},[t._v("Miners.Commitment.Terminate.Batch")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#Enabled = false")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#Threshold = 5")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v('#MaxWait = "1h0m0s"')]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v('#CheckInterval = "1m0s"')]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#GasOverEstimation = 1.2")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#GasOverPremium = 0.0")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v('#GasFeeCap = "5 nanoFIL"')]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v('#MaxFeeCap = ""')]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{pre:!0,attrs:{class:"token table class-name"}},[t._v("Miners.PoSt")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v('#Sender = "f1abjxfbp274xpdqcpuaykwkfb43omjotacm2p3za"')]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#Enabled = true")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#StrictCheck = true")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#Parallel = false")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#GasOverEstimation = 1.2")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#GasOverPremium = 0.0")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v('#GasFeeCap = "5 nanoFIL"')]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v('#MaxFeeCap = ""')]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#Confidence = 10")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#SubmitConfidence = 0")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#ChallengeConfidence = 0")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#MaxRecoverSectorLimit = 0")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#MaxPartitionsPerPoStMessage = 0")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#MaxPartitionsPerRecoveryMessage = 0")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{pre:!0,attrs:{class:"token table class-name"}},[t._v("Miners.Proof")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#Enabled = false")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{pre:!0,attrs:{class:"token table class-name"}},[t._v("Miners.Sealing")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#SealingEpochDuration = 0")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#")]),t._v("\n")])])]),s("p",[t._v("We will break down each configurable item one by one.")]),t._v(" "),s("h2",{attrs:{id:"common"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#common"}},[t._v("#")]),t._v(" [Common]")]),t._v(" "),s("p",[s("code",[t._v("Common")]),t._v(" section includes common configuration, which is further divided into four sub-configuration items:")]),t._v(" "),s("h3",{attrs:{id:"common-api"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#common-api"}},[t._v("#")]),t._v(" [Common.API]")]),t._v(" "),s("p",[s("code",[t._v("Common.API")]),t._v(" is interface related configuration, its content includes:")]),t._v(" "),s("div",{staticClass:"language-toml extra-class"},[s("pre",{pre:!0,attrs:{class:"language-toml"}},[s("code",[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{pre:!0,attrs:{class:"token table class-name"}},[t._v("Common.API")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# Chain service info, required, string type")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# Fill in according to the actual situation of the service used")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v('# If the field is valid as a token-included-info-string ("{token}:{multiaddr}"), the token included would be used to construct the rpc client instead of the common token.')]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token key property"}},[t._v("Chain")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"/ip4/{api_host}/tcp/{api_port}"')]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# Message service info, required, string type")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# Fill in according to the actual situation of the service used")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v('# If the field is valid as a token-included-info-string ("{token}:{multiaddr}"), the token included would be used to construct the rpc client instead of the common token.')]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token key property"}},[t._v("Messager")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"/ip4/{api_host}/tcp/{api_port}"')]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# Market service info, optional, string type")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# Fill in according to the actual situation of the service used")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v('# If the field is valid as a token-included-info-string ("{token}:{multiaddr}"), the token included would be used to construct the rpc client instead of the common token.')]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token key property"}},[t._v("Market")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"/ip4/{api_host}/tcp/{api_port}"')]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# Event gateway service infos, required, string type")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# Fill in according to the actual situation of the service used")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v('# For each one contained, if the item is valid as a token-included-info-string ("{token}:{multiaddr}"), the token included would be used to construct the rpc client instead of the common token.')]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token key property"}},[t._v("Gateway")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"/ip4/{api_host}/tcp/{api_port}"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# common token for services, required, string type")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# Fill in according to the actual situation of the service used")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token key property"}},[t._v("Token")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"{some token}"')]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# Interval time for detecting chain height changes, optional, duration type")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# Default is 1min")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v('#ChainEventInterval = "1m0s"')]),t._v("\n")])])]),s("h3",{attrs:{id:"common-plugins"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#common-plugins"}},[t._v("#")]),t._v(" [Common.Plugins]")]),t._v(" "),s("p",[s("code",[t._v("Common.Plugins")]),t._v(" is used for configuring the plugin path of damocles-manager.")]),t._v(" "),s("div",{staticClass:"language-toml extra-class"},[s("pre",{pre:!0,attrs:{class:"language-toml"}},[s("code",[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{pre:!0,attrs:{class:"token table class-name"}},[t._v("Common.Plugins")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# Path where plugins are stored, optional，string type")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# Default is an empty string, which means that no plugin will be loaded.")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# It is recommended to use absolute paths.")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token key property"}},[t._v("Dir")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('""')]),t._v("\n")])])]),s("h3",{attrs:{id:"common-piecestores"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#common-piecestores"}},[t._v("#")]),t._v(" [[Common.PieceStores]]")]),t._v(" "),s("p",[s("code",[t._v("Common.PieceStores")]),t._v(" is used for configuring local deal "),s("code",[t._v("piece")]),t._v(" data. When there is available offline deal, you can configure this item to avoid getting the deal "),s("code",[t._v("piece")]),t._v(" data through public network traffic.")]),t._v(" "),s("p",[t._v("Each local store directory should correspond to a "),s("code",[t._v("Common.PieceStores")]),t._v(" configuration block.")]),t._v(" "),s("h4",{attrs:{id:"basic-configuration-example"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#basic-configuration-example"}},[t._v("#")]),t._v(" Basic configuration example")]),t._v(" "),s("div",{staticClass:"language-toml extra-class"},[s("pre",{pre:!0,attrs:{class:"language-toml"}},[s("code",[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{pre:!0,attrs:{class:"token table class-name"}},[t._v("Common.PieceStores")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# name, optional, string type")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# The default is the absolute path corresponding to the path")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v('#Name = "remote-store1"')]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# path, required, string type")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token key property"}},[t._v("Path")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"/mnt/mass/piece1"')]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# Plugin path, optional, string type")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# default is null")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# If you would like to use a custom storage scheme, you can write a golang plugin that meets the requirements and set it here.")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# Deprecated, Please use PluginName instead.")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v('#Plugin = "path/to/objstore-plugin"')]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# Plugin path, optional, string type")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# default is empty string")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# If you would like to use a custom storage scheme, you can write a golang plugin that meets the requirements and set it here.")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v('#PluginName = "s3store"')]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# Meta information, optional items, dictionary type")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v('# The internal value is in the format of Key = "Value"')]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# Default value is null")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# Used to support different types of storage schemes")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{pre:!0,attrs:{class:"token table class-name"}},[t._v("Common.PieceStores.Meta")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v('#SomeKey = "SomeValue"')]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#")]),t._v("\n")])])]),s("h3",{attrs:{id:"common-persiststores"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#common-persiststores"}},[t._v("#")]),t._v(" [[Common.PersistStores]]")]),t._v(" "),s("p",[s("code",[t._v("Common.PersistStores")]),t._v(" is used to configure sector persistent data stores. It corresponds to the "),s("code",[t._v("attached")]),t._v(" concept in "),s("code",[t._v("damocles-worker")]),t._v(".")]),t._v(" "),s("p",[t._v("Similar to "),s("code",[t._v("Common.PieceStores")]),t._v(", each persistent store directory should correspond to a "),s("code",[t._v("Common.PersistStores")]),t._v(" configuration block.")]),t._v(" "),s("h4",{attrs:{id:"basic-configuration-example-2"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#basic-configuration-example-2"}},[t._v("#")]),t._v(" Basic configuration example")]),t._v(" "),s("div",{staticClass:"language-toml extra-class"},[s("pre",{pre:!0,attrs:{class:"language-toml"}},[s("code",[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{pre:!0,attrs:{class:"token table class-name"}},[t._v("Common.PersistStores")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# name, optional, string type")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("## Default is the absolute path corresponding to the path")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v('#Name = "remote-store1"')]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# path, required, string type")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# It is recommended to use absolute paths")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token key property"}},[t._v("Path")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"/mnt/remote/10.0.0.14/store"')]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# read only, optional, boolean")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# Default is false")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# From v0.4.0 and above, the persistent storage allocation logic goes to damocles-manager")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# This configuration can be used to set whether you can continue to write to the storage")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#ReadOnly = false")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# optional, boolean")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# Default is false")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# Whether to validate if the Path is a regular file. If set to True, an error will be raised if the Path is a non-regular file, such as a symbolic link.")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#Strict = false")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# weight, optional, number type")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# Default is 1")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# When the filled value is 0, it is equivalent to 1")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# From v0.4.0 and above, the persistent storage allocation logic goes to damocles-manager")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# This configuration can be used to set the weight allocation ratio between multiple persistent stores")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# The probability of each persistent stores being selected is `weight / sum`, where `sum` is the sum of the weights of all available persistent stores.")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# Example: Configure 3 persistent stores, the weights are 2, 1, 1. The probability of being selected is 50%, 25%, 25% respectively")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#Weight = 1")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# Plugin path, optional, string type")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# default is null")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# If you want to use a custom storage scheme, you can write a golang plugin that meets the requirements and set it here.")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# Deprecated, Please use PluginName instead.")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v('#Plugin = "path/to/objstore-plugin"')]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# List of miner IDs that are allowed, optional, numeric array type")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# default is null")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# When not set, it is regarded as allowing all miner IDs; when set, it is equivalent to a whitelist, which allows only listed miner IDs")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# If a miner ID appears in AllowMiners and DenyMiners at the same time, DenyMiners will take effect first, which is considered blacklisted")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#AllowMiners = [1, 2]")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# List of miner IDs that are being denied, optional, numeric array type")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# default is null")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# When not set, it is regarded as not rejecting any miner number; when set, it is equivalent to a blacklist, which will deny the listed miner ID")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# If a miner ID appears in both AllowMiners and DenyMiners, DenyMiners will take effect first, which is considered blacklisted")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#DenyMiners = [3, 4]")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# Plugin path, optional, string type")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# default is empty string")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# If you would like to use a custom storage scheme, you can write a golang plugin that meets the requirements and set it here.")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v('#PluginName = "s3store"')]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# Meta information, optional items, dictionary type")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v('# The internal value is in the format of Key = "Value"')]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# Default value is null")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# Used to support the preparation of different types of storage schemes, currently has no effect")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{pre:!0,attrs:{class:"token table class-name"}},[t._v("Common.PersistStores.Meta")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v('#SomeKey = "SomeValue"')]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#")]),t._v("\n")])])]),s("h3",{attrs:{id:"common-mongokvstore-deprecated"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#common-mongokvstore-deprecated"}},[t._v("#")]),t._v(" [Common.MongoKVStore] "),s("code",[t._v("Deprecated")])]),t._v(" "),s("p",[s("code",[t._v("Common.MongoKVStore")]),t._v(" is used to configure whether "),s("code",[t._v("damocles-manager")]),t._v(" use MongoDB as KV database during sealing。")]),t._v(" "),s("h4",{attrs:{id:"basic-configuration-example-3"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#basic-configuration-example-3"}},[t._v("#")]),t._v(" Basic configuration example")]),t._v(" "),s("div",{staticClass:"language-toml extra-class"},[s("pre",{pre:!0,attrs:{class:"language-toml"}},[s("code",[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{pre:!0,attrs:{class:"token table class-name"}},[t._v("Common.MongoKVStore")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# Switch of Mongo KV, optional, boolean type")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# default is false ")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token key property"}},[t._v("Enable")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("true")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# DSN of Mongo, when `Enable` is true, `DSN` is required, string type.")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token key property"}},[t._v("DSN")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"mongodb://127.0.0.1:27017/?directConnection=true&serverSelectionTimeoutMS=2000"')]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# DatabaseName of Mongo, when `Enable` is true, `DatabaseName` is required, string type.")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token key property"}},[t._v("DatabaseName")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"test"')]),t._v("\n")])])]),s("h3",{attrs:{id:"common-proving"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#common-proving"}},[t._v("#")]),t._v(" [Common.Proving]")]),t._v(" "),s("p",[t._v("Proving used to control the number of proving parallels and check timeouts.")]),t._v(" "),s("p",[t._v("example:")]),t._v(" "),s("div",{staticClass:"language-toml extra-class"},[s("pre",{pre:!0,attrs:{class:"language-toml"}},[s("code",[s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# Maximum number of sector checks to run in parallel, optional, time type")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# Default is 128. (0 = unlimited)")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# WARNING: Setting this value too high may make the node crash by running out of stack")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# WARNING: Setting this value too low may make sector challenge reading much slower, resulting in failed PoSt due")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# to late submission.")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#ParallelCheckLimit = 128")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# Maximum amount of time a proving pre-check can take for a sector, optional, time type")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# Default is 10m0s.")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# If the check times out the sector will be skipped")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# WARNING: Setting this value too low risks in sectors being skipped even though they are accessible, just reading the test challenge took longer than this timeout")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# WARNING: Setting this value too high risks missing PoSt deadline in case IO operations related to this sector are blocked (e.g. in case of disconnected NFS mount)")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v('#SingleCheckTimeout = "10m0s"')]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# Maximum amount of time a proving pre-check can take for an entire partition, optional time type")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# Default is 20m0s.")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# If the check times out, sectors in the partition which didn't get checked on time will be skipped")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# WARNING: Setting this value too low risks in sectors being skipped even though they are accessible, just reading the test challenge took longer than this timeout")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# WARNING: Setting this value too high risks missing PoSt deadline in case IO operations related to this partition are blocked or slow")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v('#PartitionCheckTimeout = "20m0s"')]),t._v("\n")])])]),s("h3",{attrs:{id:"common-db"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#common-db"}},[t._v("#")]),t._v(" [Common.DB]")]),t._v(" "),s("p",[s("code",[t._v("Common.DB")]),t._v(" is used to configure  KV database used by "),s("code",[t._v("damocles-manager")]),t._v(" during sealing. Currently, the "),s("code",[t._v("badger")]),t._v(" local database and "),s("code",[t._v("mongo")]),t._v(" database are supported.")]),t._v(" "),s("h4",{attrs:{id:"basic-configuration-example-4"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#basic-configuration-example-4"}},[t._v("#")]),t._v(" Basic configuration example:")]),t._v(" "),s("div",{staticClass:"language-toml extra-class"},[s("pre",{pre:!0,attrs:{class:"language-toml"}},[s("code",[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{pre:!0,attrs:{class:"token table class-name"}},[t._v("Common.DB")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# Specify database, optional, string type")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# Default is badger")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# All options: badger | mongo | plugin")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token key property"}},[t._v("Driver")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"badger"')]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{pre:!0,attrs:{class:"token table class-name"}},[t._v("Common.DB.Badger")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# Basedir of the badger, optional, string type")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# Default value is empty string")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# Use home dir (default is ~/.damocles-manager) to store badger database files if BaseDir is empty string")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v('#BaseDir = ""')]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{pre:!0,attrs:{class:"token table class-name"}},[t._v("Common.DB.Mongo")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# DSN of Mongo, when `Enable` is true, `DSN` is required, string type.")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token key property"}},[t._v("DSN")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"mongodb://127.0.0.1:27017/?directConnection=true&serverSelectionTimeoutMS=2000"')]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# DatabaseName of Mongo, when `Enable` is true, `DatabaseName` is required, string type.")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token key property"}},[t._v("DatabaseName")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"test"')]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{pre:!0,attrs:{class:"token table class-name"}},[t._v("Common.DB.Plugin")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# The plugin name, optional，string type")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# Default is null")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token key property"}},[t._v("PluginName")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"redis"')]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# Metadata, optional, dict type")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v('# The internal value is in the format of Key = "Value"')]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# Default is null")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# The Metadata will be pass to the constructor of the plugin")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{pre:!0,attrs:{class:"token table class-name"}},[t._v("Common.DB.Plugin.Meta")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v('#SomeKey = "SomeValue"')]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#")]),t._v("\n")])])]),s("h2",{attrs:{id:"miners"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#miners"}},[t._v("#")]),t._v(" [[Miners]]")]),t._v(" "),s("p",[s("code",[t._v("Miners")]),t._v(" is an important configuration item, which is used to define behavior and policy for a certain "),s("code",[t._v("SP")]),t._v(".")]),t._v(" "),s("p",[s("code",[t._v("damocles")]),t._v(" is designed to support multiple "),s("code",[t._v("SP")]),t._v("s with the same set of components. This is reflected in "),s("code",[t._v("damocles-manager")]),t._v(", which you can set multiple "),s("code",[t._v("Miners")]),t._v(" configuration blocks as needed.")]),t._v(" "),s("h3",{attrs:{id:"main-configuration-item"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#main-configuration-item"}},[t._v("#")]),t._v(" Main configuration item")]),t._v(" "),s("div",{staticClass:"language-toml extra-class"},[s("pre",{pre:!0,attrs:{class:"language-toml"}},[s("code",[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{pre:!0,attrs:{class:"token table class-name"}},[t._v("Miners")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# `SP` actor id, required, numeric type")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token key property"}},[t._v("Actor")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("10086")]),t._v("\n")])])]),s("p",[t._v("In addition to the main configuration, "),s("code",[t._v("Miners")]),t._v(" also contains a number of different sub-configuration blocks, let's go through them one by one")]),t._v(" "),s("h3",{attrs:{id:"miners-sector"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#miners-sector"}},[t._v("#")]),t._v(" [Miners.Sector]")]),t._v(" "),s("p",[t._v("Policy used to control sector allocation.")]),t._v(" "),s("div",{staticClass:"language-toml extra-class"},[s("pre",{pre:!0,attrs:{class:"language-toml"}},[s("code",[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{pre:!0,attrs:{class:"token table class-name"}},[t._v("Miners.Sector")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# Sector start number, optional, number type")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# Default value is 0")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# Deprecated")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token key property"}},[t._v("InitNumber")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# Minimum sector number, optional, number type")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# Default value is null")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# Compared with InitNumber, when this is set,")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 1. At any time, the allocator will not give a sector number less than or equal to this value.")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 2. The value of this item can be adjusted during cluster operation.")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# Increase the config value, the assignment result will always follow the description of 1).")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# Lowering the config value usually has no effect.")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# When this item is not set, if InitNumber is a non-zero value, it is equivalent to this item.")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#MinNumber = 10")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# Sector number upper limit, optional, number type")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# The default value is null, which means no upper limit")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#MaxNumber = 1000000")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# Whether to allow allocation of sectors, optional, boolean type")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# The default value is true, that is, the allocation is enabled")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# If set to false, do not seal")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#Enabled = true")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# Whether to allow allocation of deals, optional, boolean")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# Default is false")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#EnableDeals = false")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# The life cycle of the CC sector, the unit is days, optional, number type")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# Default is 540")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#LifetimeDays = 540")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# Sector log verbosity of related modules, optional items, boolean type")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# The default value is false, which simplifies the log output")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#Verbose = false")]),t._v("\n")])])]),s("h3",{attrs:{id:"miners-snapup"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#miners-snapup"}},[t._v("#")]),t._v(" [Miners.SnapUp]")]),t._v(" "),s("p",[t._v("Production strategy for controlling "),s("code",[t._v("SnapDeal")])]),t._v(" "),s("div",{staticClass:"language-toml extra-class"},[s("pre",{pre:!0,attrs:{class:"language-toml"}},[s("code",[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{pre:!0,attrs:{class:"token table class-name"}},[t._v("Miners.SnapUp")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# Whether to enable, optional, boolean type")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# Default is false")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#Enabled = false")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# Sender address, required if enabled, address type")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v('#Sender = "t1abjxfbp274xpdqcpuaykwkfb43omjotacm2p3za"')]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# Whether to send the necessary funds from Sender when submitting the on-chain message, optional, boolean type")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# Default value is true")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# If set to false, founds from miner address")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#SendFund = true")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# Gas estimate multiplier for a single commit message, optional, floating point type")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# Default is 1.2")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#GasOverEstimation = 1.2")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# Gas premium multiplier for a single commit message, optional, floating point type")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# Default is 0.0, which means no effect")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#GasOverPremium = 0.0")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# FeeCap limit for a single message, optional, FIL value type")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# Default is 5 nanoFIL")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v('#GasFeeCap = "5 nanoFIL"')]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# Deprecated")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v('#MaxFeeCap = ""')]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# Whether to delete the original cc sector data after the snapdeal message is on the chain")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# Default is true")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#CleanupCCData = true")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# The confident height for message on-chain, optional, number type")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# Default is 15")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#MessageConfidence = 15")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# The confident height to release old data storage space, optional, number type")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# Default is 30")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#ReleaseConfidence = 30")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# SnapUp retry policy")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{pre:!0,attrs:{class:"token table class-name"}},[t._v("Miners.SnapUp.Retry")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# maximum number of retries, optional, number type")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# The default is NULL, which means no limit")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#MaxAttempts = 10")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# Status polling interval, optional, duration type")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# Default is 3min")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v('#PollInterval = "3m0s"')]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# API interface exception retry interval, optional, duration type")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# Default is 3min")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v('#APIFailureWait = "3m0s"')]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# Retry interval for local exceptions, such as local database exceptions, local storage exceptions, etc., optional, duration type")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# Default is 3min")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v('#LocalFailureWait = "3m0s"')]),t._v("\n")])])]),s("h3",{attrs:{id:"miners-commitment"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#miners-commitment"}},[t._v("#")]),t._v(" [Miners.Commitment]")]),t._v(" "),s("p",[t._v("Common section for configuring PoRep message sending policies.")]),t._v(" "),s("div",{staticClass:"language-toml extra-class"},[s("pre",{pre:!0,attrs:{class:"language-toml"}},[s("code",[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{pre:!0,attrs:{class:"token table class-name"}},[t._v("Miners.Commitment")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# Height of the message that is considered stable, optional, number type")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# Default is 10")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#Confidence = 10")]),t._v("\n")])])]),s("h3",{attrs:{id:"miners-commitment-pre"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#miners-commitment-pre"}},[t._v("#")]),t._v(" [Miners.Commitment.Pre]")]),t._v(" "),s("p",[t._v("Strategy for configuring "),s("code",[t._v("PreCommit")]),t._v(" message sending")]),t._v(" "),s("div",{staticClass:"language-toml extra-class"},[s("pre",{pre:!0,attrs:{class:"language-toml"}},[s("code",[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{pre:!0,attrs:{class:"token table class-name"}},[t._v("Miners.Commitment.Pre")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# Whether to use the necessary funds from Sender when sending the  message on-chain, optional, boolean type")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# Default value is true")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#SendFund = true")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# Sender address, required, address type")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token key property"}},[t._v("Sender")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"t1abjxfbp274xpdqcpuaykwkfb43omjotacm2p3za"')]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# Gas estimate multiplier for a single message, optional, floating point type")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# Default is 1.2")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#GasOverEstimation = 1.2")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# Gas premium multiplier for a single commit message, optional, floating point type")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# Default is 0.0, which means no effect")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#GasOverPremium = 0.0")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# FeeCap limit for a single message, optional, FIL value type")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# Default is 5 nanoFIL")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v('#GasFeeCap = "5 nanoFIL"')]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# Deprecated")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v('#MaxFeeCap = "5 nanoFIL"')]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# Aggregate message sending configuration blocks")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{pre:!0,attrs:{class:"token table class-name"}},[t._v("Miners.Commitment.Pre.Batch")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# Whether to enable aggregate messages, optional, boolean type")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# The default value is false, i.e. not enabled")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#Enabled = false")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# Minimum number of message to aggregate, optional, number type")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# The default value is 16, that is, the minimum number of aggregates is 16")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#Threshold = 16")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# Maximum waiting time, optional, time type")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# The default value is 1h, that is, the maximum wait time is 1 hour")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v('#MaxWait = "1h0m0s"')]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# Check interval, optional, time type")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# The default value is 1min, that is, every 1min to check whether the aggregation conditions are met")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v('#CheckInterval = "1m0s"')]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# Gas estimation multiplier of aggregate messages, optional, floating point type")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# Default is 1.2")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#GasOverEstimation = 1.2")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# Gas premium multiplier for a single commit message, optional, floating point type")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# Default is 0.0, which means no effect")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#GasOverPremium = 0.0")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# FeeCap limit for a single message, optional, FIL value type")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# Default is 5 nanoFIL")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v('#GasFeeCap = "5 nanoFIL"')]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# Deprecated")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v('#MaxFeeCap = "5 nanoFIL"')]),t._v("\n")])])]),s("h3",{attrs:{id:"miners-commitment-prove"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#miners-commitment-prove"}},[t._v("#")]),t._v(" [Miners.Commitment.Prove]")]),t._v(" "),s("p",[t._v("The strategy used to configure "),s("code",[t._v("ProveCommit")]),t._v(" message sending, its configuration items and functions are exactly the same as those in "),s("code",[t._v("Miners.Commitment.Pre")]),t._v(".")]),t._v(" "),s("h3",{attrs:{id:"miners-commitment-terminate"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#miners-commitment-terminate"}},[t._v("#")]),t._v(" [Miners.Commitment.Terminate]")]),t._v(" "),s("p",[t._v("The strategy used to configure "),s("code",[t._v("TerminateSectors")]),t._v(" message submission, its configuration items and functions are basically the same as those in "),s("code",[t._v("Miners.Commitment.Pre")]),t._v(". In practice, such messages are not sent as frequently. It is recommended to use single message sending mode. When using aggregate sending mode, "),s("code",[t._v("Threshold")]),t._v(" is recommended to be configured with a smaller value to ensure that messages get on-chain in time.")]),t._v(" "),s("h3",{attrs:{id:"miners-post"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#miners-post"}},[t._v("#")]),t._v(" [Miners.PoSt]")]),t._v(" "),s("p",[t._v("Options for configuring "),s("code",[t._v("WindowPoSt")]),t._v(".")]),t._v(" "),s("div",{staticClass:"language-toml extra-class"},[s("pre",{pre:!0,attrs:{class:"language-toml"}},[s("code",[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{pre:!0,attrs:{class:"token table class-name"}},[t._v("Miners.Post")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# Sender address, required, address type")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token key property"}},[t._v("Sender")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"t1abjxfbp274xpdqcpuaykwkfb43omjotacm2p3za"')]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# Whether to enable, optional, boolean type")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# Default value is true")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#Enabled = true")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# Whether to perform strong verification on sector files, optional, boolean type")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# Default value is true")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# When enabled, in addition to checking the existence of the file, it will also try to read some information, such as metadata, etc.")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#StrictCheck = true")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# Switch for enable parallel proofs generations, optional, boolean type")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# Default value is false")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# When enabled, we will start generating partitions inside one deadline parallelly")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# BE NOTICED: this can take effect only when multiple ext-provers are set")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#Parallel = false")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# Gas estimation multiplier of WindowPoSt message, optional, floating point type")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# Default is 1.2")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#GasOverEstimation = 1.2")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# Gas premium multiplier for a single commit message, optional, floating point type")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# Default is 0.0, which means no effect")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#GasOverPremium = 0.0")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# FeeCap limit for a single message, optional, FIL value type")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# Default is 5 nanoFIL")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v('#GasFeeCap = "5 nanoFIL"')]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# Deprecated")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v('#MaxFeeCap = "5 nanoFIL"')]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# Height of the message that is considered stable, optional, number type")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# Default is 10")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#Confidence = 10")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# Stable height to submit WindowPoSt proofs, optional, number type")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# This value determines how many epochs to wait for the chain to enter a stable state, so that we could start submiting proofs")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# The first epoch we can submit is deadline.Open + SubmitConfidence")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# The smaller this value is set, the earlier it will start, but at the same time, more likely to send windowPost to a fork")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# When set to 0, the default value of 4 will be used")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#SubmitConfidence = 0")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# Stable height to start WindowPoSt, optional, number type")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# This value determines how many epochs to wait for the chain to enter a stable state, and the WindowPoSt task can be started")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# The first epoch we can start is deadline.Challenge + ChallengeConfidence")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# The smaller this value is set, the earlier it will start, but at the same time, more likely to send windowPost to a fork")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# When set to 0, the default value of 10 will be used")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#ChallengeConfidence = 0")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# The maximum limit of the sectors included in one recovering check, optional, number type")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# Default value is 0")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# When set to 0, no limit")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#MaxRecoverSectorLimit = 0")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# The maximum number of Partitions allowed in a single PoSt message, optional, number type")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# Default value is 0")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# When set to 0, the default maximum value will be used")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#MaxPartitionsPerPoStMessage = 0")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# The maximum number of Partitions allowed in a single Recover message, optional, number type")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# Default value is 0")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# When set to 0, no limit")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#MaxPartitionsPerRecoveryMessage = 0")]),t._v("\n")])])]),s("h3",{attrs:{id:"miners-proof"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#miners-proof"}},[t._v("#")]),t._v(" [Miners.Proof]")]),t._v(" "),s("p",[t._v("Used to configure WinningPoSt Proof related policies")]),t._v(" "),s("div",{staticClass:"language-toml extra-class"},[s("pre",{pre:!0,attrs:{class:"language-toml"}},[s("code",[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{pre:!0,attrs:{class:"token table class-name"}},[t._v("Miners.Proof")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# Whether to enable, optional, boolean type")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# Default is false")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#Enabled = false")]),t._v("\n")])])]),s("h3",{attrs:{id:"miners-sealing"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#miners-sealing"}},[t._v("#")]),t._v(" [Miners.Sealing]")]),t._v(" "),s("p",[t._v("Used to configure sealing related policies")]),t._v(" "),s("div",{staticClass:"language-toml extra-class"},[s("pre",{pre:!0,attrs:{class:"language-toml"}},[s("code",[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{pre:!0,attrs:{class:"token table class-name"}},[t._v("Miners.Sealing")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# Sealing need how many epochs to achieve，when select deals in sealing, deals start epoch will be")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# required to later than current-epoch + sealing-duration ，optional，integer")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# Default is zero, means no config")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#SealingEpochDuration = 0")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#")]),t._v("\n")])])]),s("h3",{attrs:{id:"miners-deal-deprecated"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#miners-deal-deprecated"}},[t._v("#")]),t._v(" [Miners.Deal] "),s("code",[t._v("Deprecated")])]),t._v(" "),s("p",[t._v("Used to configure deal related policies.")]),t._v(" "),s("div",{staticClass:"language-toml extra-class"},[s("pre",{pre:!0,attrs:{class:"language-toml"}},[s("code",[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{pre:!0,attrs:{class:"token table class-name"}},[t._v("Miners.Deal")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# Whether to enable, optional, boolean type")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# Default is false")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#Enabled = false")]),t._v("\n")])])]),s("h2",{attrs:{id:"a-minimal-working-configuration-file-example"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#a-minimal-working-configuration-file-example"}},[t._v("#")]),t._v(" A minimal working configuration file example")]),t._v(" "),s("p",[t._v("Let's have a look at an example of starting a "),s("code",[t._v("damocles-manager")]),t._v(" that could supports a "),s("code",[t._v("SP")]),t._v("'s operation,")]),t._v(" "),s("div",{staticClass:"language-toml extra-class"},[s("pre",{pre:!0,attrs:{class:"language-toml"}},[s("code",[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{pre:!0,attrs:{class:"token table class-name"}},[t._v("Common")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{pre:!0,attrs:{class:"token table class-name"}},[t._v("Common.API")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token key property"}},[t._v("Chain")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"/ip4/{api_host}/tcp/{api_port}"')]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token key property"}},[t._v("Messager")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"/ip4/{api_host}/tcp/{api_port}"')]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token key property"}},[t._v("Market")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"/ip4/{api_host}/tcp/{api_port}"')]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token key property"}},[t._v("Gateway")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"/ip4/{api_host}/tcp/{api_port}"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token key property"}},[t._v("Token")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"{some token}"')]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{pre:!0,attrs:{class:"token table class-name"}},[t._v("Common.PieceStores")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token key property"}},[t._v("Path")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"{store_path}"')]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{pre:!0,attrs:{class:"token table class-name"}},[t._v("Common.PersistStores")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token key property"}},[t._v("Name")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"{store_name1}"')]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token key property"}},[t._v("Path")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"{store_path1}"')]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{pre:!0,attrs:{class:"token table class-name"}},[t._v("Common.PersistStores")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token key property"}},[t._v("Name")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"{store_name2}"')]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token key property"}},[t._v("Path")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"{store_path2}"')]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{pre:!0,attrs:{class:"token table class-name"}},[t._v("Common.PersistStores")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token key property"}},[t._v("Name")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"{store_name3}"')]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token key property"}},[t._v("Path")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"{store_path3}"')]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{pre:!0,attrs:{class:"token table class-name"}},[t._v("Common.PersistStores")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token key property"}},[t._v("Name")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"{store_name4}"')]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token key property"}},[t._v("Path")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"{store_path4}"')]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{pre:!0,attrs:{class:"token table class-name"}},[t._v("Miners")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token key property"}},[t._v("Actor")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("10086")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{pre:!0,attrs:{class:"token table class-name"}},[t._v("Miners.Sector")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token key property"}},[t._v("InitNumber")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1000")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token key property"}},[t._v("Enabled")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("true")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token key property"}},[t._v("EnableDeals")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("true")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{pre:!0,attrs:{class:"token table class-name"}},[t._v("Miners.Commitment")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{pre:!0,attrs:{class:"token table class-name"}},[t._v("Miners.Commitment.Pre")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token key property"}},[t._v("Sender")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"t1abjxfbp274xpdqcpuaykwkfb43omjotacm2p3za"')]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{pre:!0,attrs:{class:"token table class-name"}},[t._v("Miners.Commitment.Pre.Batch")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token key property"}},[t._v("Enabled")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("false")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{pre:!0,attrs:{class:"token table class-name"}},[t._v("Miners.Commitment.Prove")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token key property"}},[t._v("Sender")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"t1abjxfbp274xpdqcpuaykwkfb43omjotacm2p3za"')]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{pre:!0,attrs:{class:"token table class-name"}},[t._v("Miners.Commitment.Prove.Batch")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token key property"}},[t._v("Enabled")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("true")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{pre:!0,attrs:{class:"token table class-name"}},[t._v("Miners.Post")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token key property"}},[t._v("Sender")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"t1abjxfbp274xpdqcpuaykwkfb43omjotacm2p3za"')]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token key property"}},[t._v("Enabled")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("true")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{pre:!0,attrs:{class:"token table class-name"}},[t._v("Miners.Proof")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token key property"}},[t._v("Enabled")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("true")]),t._v("\n\n")])])]),s("p",[t._v("This activates an instance of "),s("code",[t._v("damocles-manager")]),t._v(" that...")]),t._v(" "),s("ul",[s("li",[t._v("With 1 local PieceStore")]),t._v(" "),s("li",[t._v("With 4 local persistent stores")]),t._v(" "),s("li",[t._v("Enables sector allocation, which initial number is 1000")]),t._v(" "),s("li",[t._v("Disables aggregated PreCommit")]),t._v(" "),s("li",[t._v("Enables aggregated ProveCommit")]),t._v(" "),s("li",[t._v("Enables WinningPost module")]),t._v(" "),s("li",[t._v("Enables deal")])])])}),[],!1,null,null,null);e.default=n.exports}}]);
(window.webpackJsonp=window.webpackJsonp||[]).push([[36],{421:function(e,_,r){"use strict";r.r(_);var o=r(17),v=Object(o.a)({},(function(){var e=this,_=e.$createElement,r=e._self._c||_;return r("ContentSlotsDistributor",{attrs:{"slot-key":e.$parent.slotKey}},[r("h1",{attrs:{id:"damocles-cluster-q-a"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#damocles-cluster-q-a"}},[e._v("#")]),e._v(" damocles-cluster Q&A")]),e._v(" "),r("h2",{attrs:{id:"q-load-state-key-not-found-是什么异常-是密钥配置问题么"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#q-load-state-key-not-found-是什么异常-是密钥配置问题么"}},[e._v("#")]),e._v(" Q: load state: key not found 是什么异常？是密钥配置问题么？")]),e._v(" "),r("p",[r("strong",[e._v("A")]),e._v(": "),r("code",[e._v("load state: key not found")]),e._v(" 发生在扇区密封或升级过程中，是由于扇区对应的状态记录未找到导致的。")]),e._v(" "),r("p",[e._v("这里的 "),r("code",[e._v("key not found")]),e._v(" 异常由底层的组件传导上来，其中的 "),r("code",[e._v("key")]),e._v(" 是指 kv 数据库中的键。")]),e._v(" "),r("p",[e._v("这种异常通常发生在以下场景：")]),e._v(" "),r("ol",[r("li",[e._v("已经在 "),r("code",[e._v("damocles-manager")]),e._v(" 一侧通过类似 "),r("code",[e._v("util sealer sectors abort")]),e._v(" 这样的命令终止了某个扇区，而对应的 "),r("code",[e._v("damocles-worker")]),e._v(" 仍在继续执行这个扇区的任务；")]),e._v(" "),r("li",[r("code",[e._v("damocles-manager")]),e._v(" 更换了 "),r("code",[e._v("home")]),e._v(" 目录，导致无法读取之前的扇区记录数据；")]),e._v(" "),r("li",[r("code",[e._v("damocles-worker")]),e._v(" 连接到了错误的 "),r("code",[e._v("damocles-manager")]),e._v(" 实例；")])]),e._v(" "),r("p",[e._v("对于 1)，可以先通过 "),r("code",[e._v("util sealer sectors list")]),e._v(" 命令观察已终止的扇区列表，确认是否存在问题扇区对应的记录，如果存在的话，再通过 "),r("code",[e._v("util sealer sectors restore")]),e._v(" 命令进行恢复。")]),e._v(" "),r("p",[e._v("对于其他情况，需要按照实际情况更正配置或连接信息。")]),e._v(" "),r("h2",{attrs:{id:"q-编译出的-damocles-worker-可执行文件特别大-是什么原因"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#q-编译出的-damocles-worker-可执行文件特别大-是什么原因"}},[e._v("#")]),e._v(" Q: 编译出的 damocles-worker 可执行文件特别大，是什么原因？")]),e._v(" "),r("p",[r("strong",[e._v("A")]),e._v(": 这里的特别大，通常是指可执行文件的体积达到上 G。正常来说，"),r("code",[e._v("damocles-worker")]),e._v(" 可执行文件的体积在数十 M 这个量级。上 G 的文件肯定已经超出了正常的范畴。")]),e._v(" "),r("p",[e._v("这种情况通常是编译过程中意外启用了 debug 信息导致的，通常有几种可能性：")]),e._v(" "),r("ol",[r("li",[e._v("在各层级的 "),r("a",{attrs:{href:"https://doc.rust-lang.org/cargo/reference/config.html",target:"_blank",rel:"noopener noreferrer"}},[e._v("cargo config 文件"),r("OutboundLink")],1),e._v(" 中设置了 "),r("code",[e._v("[profile.<name>.debug]")]),e._v("；")]),e._v(" "),r("li",[e._v("在编译指令中引入了启用 debug 信息的参数，这种参数可能出现在以下位置：\n"),r("ul",[r("li",[e._v("环境变量：以 "),r("code",[e._v("RUSTFLAG")]),e._v(" 为代表的各类 "),r("code",[e._v("XXXFLAG")]),e._v(" 环境变量")]),e._v(" "),r("li",[e._v("编译器参数：以 rustc 的 "),r("code",[e._v("-g")]),e._v(" 参数为代表的各类参数")]),e._v(" "),r("li",[e._v("编译配置项：在各层级的 cargo config 文件中存在的、以 "),r("code",[e._v("rustflags")]),e._v(" 为代表的各类配置项")])])])]),e._v(" "),r("p",[e._v("关于这个问题，我们注意到，在 "),r("code",[e._v("lotus")]),e._v(" 的官方文档 "),r("a",{attrs:{href:"https://lotus.filecoin.io/lotus/install/linux/",target:"_blank",rel:"noopener noreferrer"}},[e._v("INSTALL-linux"),r("OutboundLink")],1),e._v(" 中提到的环境变量建议：")]),e._v(" "),r("div",{staticClass:"language- extra-class"},[r("pre",{pre:!0,attrs:{class:"language-text"}},[r("code",[e._v('export RUSTFLAGS="-C target-cpu=native -g"\nexport FFI_BUILD_FROM_SOURCE=1\n')])])]),r("p",[e._v("其中，"),r("code",[e._v("-C target-cpu=native")]),e._v(" 的作用是针对本机 CPU 进行优化，而 "),r("code",[e._v("-g")]),e._v(" 的作用就是启用 debug 信息。")]),e._v(" "),r("p",[e._v("如果用户按照 "),r("code",[e._v("lotus")]),e._v(" 的经验，可能就会发现可执行文件体积特别大的情况。针对这种情况，我们推荐使用者仅配置")]),e._v(" "),r("div",{staticClass:"language- extra-class"},[r("pre",{pre:!0,attrs:{class:"language-text"}},[r("code",[e._v('export RUSTFLAGS="-C target-cpu=native"\n')])])]),r("p",[e._v("感谢来自社区的 "),r("a",{attrs:{href:"https://github.com/caijian76",target:"_blank",rel:"noopener noreferrer"}},[e._v("caijian76"),r("OutboundLink")],1),e._v(" 提供反馈和线索。")]),e._v(" "),r("h2",{attrs:{id:"q-once-instance-has-previously-been-poisoned-是什么错误-如何处理"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#q-once-instance-has-previously-been-poisoned-是什么错误-如何处理"}},[e._v("#")]),e._v(" Q:  "),r("code",[e._v("Once instance has previously been poisoned")]),e._v(" 是什么错误？如何处理？")]),e._v(" "),r("p",[r("strong",[e._v("A")]),e._v(": 从最基本的原理来说，"),r("code",[e._v("Once")]),e._v(" 是一类为了确保线程安全而产生的编程基础类型，它通常会使用到操作系统层面的锁等底层实现，被用于非常多的场合和类库中。")]),e._v(" "),r("p",[e._v("出现 "),r("code",[e._v("Once instance has previously been poisoned")]),e._v(" 这类异常是出现在系统调用中，它的原因可能有很多种。这里提出的只是其中一种已经被验证了的情况，描述如下：")]),e._v(" "),r("ul",[r("li",[e._v("当需要为外部处理器限核时，我们会使用 "),r("code",[e._v("cgroup.cpuset")]),e._v(" 配置项")]),e._v(" "),r("li",[e._v("当外部处理器的工作内容是内存敏感类型，如 "),r("code",[e._v("pc1")]),e._v(" 时，我们通常还会启用内存亲和性即 "),r("code",[e._v("numa_preferred")]),e._v(" 配置项")]),e._v(" "),r("li",[e._v("当上述配置同时启用，而 "),r("code",[e._v("cgroup.cpuset")]),e._v(" 中的 cpu 核心不符合 "),r("code",[e._v("numa_preferred")]),e._v(" 指定的物理分区时，有较高的可能性出现此类异常")])]),e._v(" "),r("p",[e._v("当然，上面这种情况也许只是众多可能性中的一种。我们会在发现其他情况之后补充到这里来。")]),e._v(" "),r("p",[e._v("感谢来自社区的 "),r("a",{attrs:{href:"https://app.slack.com/client/TEHTVS1L6/C028PCH8L31/user_profile/U03C6L8RWP6",target:"_blank",rel:"noopener noreferrer"}},[e._v("steven"),r("OutboundLink")],1),e._v(" 提供反馈，"),r("a",{attrs:{href:"https://app.slack.com/client/TEHTVS1L6/C028PCH8L31/user_profile/U01U2M1GZL7",target:"_blank",rel:"noopener noreferrer"}},[e._v("Dennis Zou"),r("OutboundLink")],1),e._v(" 提供解答。")]),e._v(" "),r("h2",{attrs:{id:"q-too-many-open-files-os-error-24-是什么错误-如何处理"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#q-too-many-open-files-os-error-24-是什么错误-如何处理"}},[e._v("#")]),e._v(" Q: "),r("code",[e._v("Too many open files (os error 24)")]),e._v(" 是什么错误？如何处理？")]),e._v(" "),r("p",[r("strong",[e._v("A")]),e._v("："),r("code",[e._v("Too many open files (os error 24)")]),e._v(" 通常出现在 linux 系统中，表明当前进程开启了太多的文件句柄。")]),e._v(" "),r("p",[e._v("这种情况在 "),r("code",[e._v("WindowPoSt")]),e._v(" 过程中较为常见，原因是每个 "),r("code",[e._v("WindowPoSt")]),e._v(" 任务都有可能要读取大量的扇区文件。")]),e._v(" "),r("p",[e._v("通常来说，这种问题可以通过改变提高文件句柄限制来解决。但是我们很难确定一个具体的上限值。")]),e._v(" "),r("p",[e._v("因此，在大多数场景中，我们直接将文件句柄限制设置为无限来规避这种问题。")]),e._v(" "),r("p",[e._v("具体操作方式可以参考 "),r("a",{attrs:{href:"https://github.com/filecoin-project/lotus/discussions/6198",target:"_blank",rel:"noopener noreferrer"}},[e._v("[Tutorial] Permanently Setting Your ULIMIT System Value"),r("OutboundLink")],1),e._v("。")]),e._v(" "),r("h2",{attrs:{id:"q-为什么我期望的结果是两张-gpu-都被使用-但是实际情况有一张-gpu-始终空闲"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#q-为什么我期望的结果是两张-gpu-都被使用-但是实际情况有一张-gpu-始终空闲"}},[e._v("#")]),e._v(" Q：为什么我期望的结果是两张 GPU 都被使用，但是实际情况有一张 GPU 始终空闲？")]),e._v(" "),r("p",[r("strong",[e._v("A")]),e._v("：发生这种问题的原因有很多，但是一般来说，刚接触 damocles-cluster 的用户在进行资源编排的时候误理解和配置了一些参数导致这种结果的情况比较多。换句话说，这通常是由"),r("em",[e._v("对硬件和调度配置的误解")]),e._v(" 导致的。")]),e._v(" "),r("p",[e._v("这里我们从原理说起。")]),e._v(" "),r("p",[e._v("一般来说，配置一个外部处理器的时候，我们需要考虑几个方面的实际情况：")]),e._v(" "),r("ol",[r("li",[r("p",[e._v("这个外部处理器能使用哪些硬件资源")]),e._v(" "),r("p",[e._v("这一块主要受诸如 "),r("code",[e._v("cgroup.cpuset")]),e._v(" 、"),r("code",[e._v("numa_preferred")]),e._v(" 以及环境变量 "),r("code",[e._v("CUDA_VISIBLE_DEVICE")]),e._v(" 等影响。")]),e._v(" "),r("p",[e._v("换句话说，这些主要是针对这一个外部处理器子进程的、系统或启动级别的设置。")])]),e._v(" "),r("li",[r("p",[e._v("使用这个外部处理器时的调度原则")]),e._v(" "),r("ol",[r("li",[r("p",[e._v("这个外部处理器自身的处理能力设定")]),e._v(" "),r("p",[e._v("这一块目前主要是 "),r("code",[e._v("concurrent")]),e._v(" 配置项")])]),e._v(" "),r("li",[r("p",[e._v("这个外部处理器和其他外部处理器的协调情况")]),e._v(" "),r("p",[e._v("这种情况相对复杂，还可以再细分为：")]),e._v(" "),r("ul",[r("li",[r("p",[e._v("和其他相同阶段的外部处理器协调")]),e._v(" "),r("p",[e._v("如 "),r("code",[e._v("processors.limitation.concurrent")]),e._v("、"),r("code",[e._v("processors.limitation.staggered")])])]),e._v(" "),r("li",[r("p",[e._v("和其他不同阶段的外部处理器协调")]),e._v(" "),r("p",[e._v("如 "),r("code",[e._v("processors.ext_locks")])])])])])])])]),e._v(" "),r("p",[e._v("以题目中的、在一台双 GPU 的机器上实行的这样一份配置为例：")]),e._v(" "),r("div",{staticClass:"language- extra-class"},[r("pre",{pre:!0,attrs:{class:"language-text"}},[r("code",[e._v('[processors.ext_locks]\ngpu1 = 1\ngpu2 = 2\n\n\n[[processors.pc2]]\ncgroup.cpuset =  "2,5,8,11,14,17,20,23"\nlocks = ["gpu1"]\nenvs = { CUDA_VISIBLE_DEVICES = "0" }\n\n[[processors.pc2]]\ncgroup.cpuset =  "50,53,56,59,62,65,68,71"\nlocks = ["gpu2"]\nenvs = { CUDA_VISIBLE_DEVICES = "0" }\n\n[[processors.c2]]\nbin = /usr/local/bin/gpuproxy\nargs = ["args1", "args2", "args3"]\n')])])]),r("p",[e._v("其中存在这样几点常见误解：")]),e._v(" "),r("ol",[r("li",[r("p",[e._v("关于 "),r("code",[e._v("ext_locks")]),e._v(" 的配置格式，它是一个完全由用户自行定义的锁，其格式为 "),r("code",[e._v("<锁名> = <同时持锁的外部处理器数量>")]),e._v("。")]),e._v(" "),r("p",[e._v("在这个场景下，"),r("code",[e._v("gpu2 = 2")]),e._v(" 很有可能来自于对数字含义的误解。")])]),e._v(" "),r("li",[r("p",[r("code",[e._v("ext_locks")]),e._v(" 通常用在 "),r("em",[e._v("不同阶段的处理器需要独占使用同一个硬件")]),e._v(" 的场景，比较常见的是 "),r("code",[e._v("pc2")]),e._v(" 和 "),r("code",[e._v("c2")]),e._v(" 共用一块 GPU。")]),e._v(" "),r("p",[e._v("在这个范例中，"),r("code",[e._v("c2")]),e._v(" 使用了代理 GPU 的方案，不使用本地 GPU，因此 "),r("code",[e._v("pc2")]),e._v(" 的 "),r("code",[e._v("ext_locks")]),e._v(" 设置并无效果。")])]),e._v(" "),r("li",[r("p",[e._v("两个 "),r("code",[e._v("pc2")]),e._v(" 的外部处理器都设定了 "),r("code",[e._v('CUDA_VISIBLE_DEVICE = "0"')]),e._v("，这是第二块 GPU 空闲的根本原因，即两个 "),r("code",[e._v("pc2")]),e._v(" 外部处理器都只能看到序号为 0 的 GPU，也就是说他们始终在使用同一块 GPU。")]),e._v(" "),r("p",[r("code",[e._v("CUDA_VISIBLE_DEVICE")]),e._v(" 是 nvidia 官方驱动中提供的一个环境变量，它的解读可以参考 "),r("a",{attrs:{href:"https://developer.nvidia.com/zh-cn/blog/cuda-pro-tip-control-gpu-visibility-cuda_visible_devices/",target:"_blank",rel:"noopener noreferrer"}},[e._v("CUDA Pro 技巧：使用 CUDA_VISIBLE_DEVICES 控制 GPU 的可见性"),r("OutboundLink")],1)])])]),e._v(" "),r("p",[e._v("那么经过修正后的配置应当为：")]),e._v(" "),r("div",{staticClass:"language- extra-class"},[r("pre",{pre:!0,attrs:{class:"language-text"}},[r("code",[e._v('[[processors.pc2]]\ncgroup.cpuset =  "2,5,8,11,14,17,20,23"\nenvs = { CUDA_VISIBLE_DEVICES = "0" }\n\n[[processors.pc2]]\ncgroup.cpuset =  "50,53,56,59,62,65,68,71"\nenvs = { CUDA_VISIBLE_DEVICES = "1" }\n\n[[processors.c2]]\nbin = /usr/local/bin/gpuproxy\nargs = ["args1", "args2", "args3"]\n')])])]),r("p",[e._v("感谢社区的 "),r("a",{attrs:{href:"https://app.slack.com/client/TEHTVS1L6/C028PCH8L31/user_profile/U03C6L8RWP6",target:"_blank",rel:"noopener noreferrer"}},[e._v("steven"),r("OutboundLink")],1),e._v(" 提供案例。")]),e._v(" "),r("h2",{attrs:{id:"q-memory-map-must-have-a-non-zero-length-是什么错误-如何处理"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#q-memory-map-must-have-a-non-zero-length-是什么错误-如何处理"}},[e._v("#")]),e._v(" Q："),r("code",[e._v("memory map must have a non-zero length")]),e._v(" 是什么错误？如何处理？")]),e._v(" "),r("p",[r("strong",[e._v("A")]),e._v("：这种报错信息表达的是，是使用 "),r("code",[e._v("mmap")]),e._v(" 的过程中，目标文件大小为 0。")]),e._v(" "),r("p",[e._v("根据经验，在目前 Filecoin 的各类算法中， "),r("code",[e._v("mmap")]),e._v(" 的使用主要出现在各类静态文件的读取，如：")]),e._v(" "),r("ul",[r("li",[e._v("vk 和 params 文件")]),e._v(" "),r("li",[e._v("各类事先生成的 cache 文件，如 parent cache 等")])]),e._v(" "),r("p",[e._v("那么出现这种错误，通常表示目标文件不存在，或为空文件。")]),e._v(" "),r("p",[e._v("例如，在 "),r("code",[e._v("WindowPoSt")]),e._v(" 场景，如果没有准备好参数文件或密钥文件。")]),e._v(" "),r("h2",{attrs:{id:"q-vc-processors-core-ext-producer-failed-to-unmarshal-response-string-是什么错误-如何处理"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#q-vc-processors-core-ext-producer-failed-to-unmarshal-response-string-是什么错误-如何处理"}},[e._v("#")]),e._v(" Q: "),r("code",[e._v("vc_processors::core::ext::producer: failed to unmarshal response string")]),e._v(" 是什么错误？ 如何处理？")]),e._v(" "),r("p",[r("strong",[e._v("A")]),e._v("：发生这种错误是因为外部处理器产生了错误格式的响应。可以通过 damocles-worker 提供的命令运行时的开启或关闭 dump 功能，查看错误格式的响应。")]),e._v(" "),r("p",[e._v("开启 dump")]),e._v(" "),r("div",{staticClass:"language- extra-class"},[r("pre",{pre:!0,attrs:{class:"language-text"}},[r("code",[e._v('damocles-worker worker --config="path/to/your_config_file.toml" enable_dump --child_pid=<target_ext_processor_pid> --dump_dir="path/to/dump_dir"\n')])])]),r("p",[e._v("关闭 dump")]),e._v(" "),r("div",{staticClass:"language- extra-class"},[r("pre",{pre:!0,attrs:{class:"language-text"}},[r("code",[e._v('damocles-worker worker --config="path/to/your_config_file.toml" disable_dump --child_pid=<target_ext_processor_pid>\n')])])]),r("p",[e._v("可根据 dump 文件进行 debug。")]),e._v(" "),r("h2",{attrs:{id:"q"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#q"}},[e._v("#")]),e._v(" Q:")]),e._v(" "),r("div",{staticClass:"language- extra-class"},[r("pre",{pre:!0,attrs:{class:"language-text"}},[r("code",[e._v("...storage_proofs_porep::stacked::vanilla::create_label::multi: create labels\nthread '<unnamed>' panicked at 'assertion failed: `(left == right)`\n  left: `0`,\n right: `2`, .../storage-proofs-porep-11.1.1/src/stacked/vanilla/cores.rs:151:5\n")])])]),r("p",[e._v("是什么错误？如何处理？")]),e._v(" "),r("p",[r("strong",[e._v("A")]),e._v(": 这个错误大概率是 damocles-worker 中 PC1 的 "),r("code",[e._v("cgroup.cpuset")]),e._v(" 配置问题引发的。参考："),r("RouterLink",{attrs:{to:"/zh/operation/damocles-worker-config.html#cgroupcpuset-配置注意事项"}},[r("code",[e._v("cgroup.cpuset")]),e._v(" 配置注意事项")])],1)])}),[],!1,null,null,null);_.default=v.exports}}]);